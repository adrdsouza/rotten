# HTTP-only test configuration for Rotten Hand
server {
    # Server variables
    set $forward_scheme http;
    set $server "5.78.82.156";
    set $port 4000;

    # Listen on HTTP only for testing
    listen 80;
    listen [::]:80;

    # Server names
    server_name rottenhand.com www.rottenhand.com localhost;

    # Logging
    access_log /var/log/nginx/rottenhand_access.log proxy;
    error_log /var/log/nginx/rottenhand_error.log warn;

    # --- Compression & Performance Settings ---
    
    # Gzip Compression (fallback for older browsers)
    gzip on;
    gzip_proxied any;
    gzip_comp_level 5;
    gzip_vary on;
    gzip_types
        text/plain
        text/css
        application/javascript
        application/json
        application/xml
        image/svg+xml;

    # Brotli Compression (better compression for modern browsers)
    brotli on;
    brotli_comp_level 4;
    brotli_min_length 1000;
    brotli_static on;
    brotli_types
        text/plain
        text/css
        text/javascript
        application/javascript
        application/json
        application/xml
        application/xml+rss
        image/svg+xml
        font/woff
        font/woff2;

    # Proxy buffering for better performance
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    proxy_temp_file_write_size 256k;

    # Timeout settings
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # --- CRITICAL SSE Endpoint Configuration ---
    location /api/cache-events {
        # Disable all buffering and compression for SSE
        gzip off;
        brotli off;
        proxy_buffering off;
        proxy_cache off;
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        
        # SSE-specific timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;  # 5 minutes
        
        # Keep connections alive
        proxy_socket_keepalive on;
        
        # Pass to backend (port 3000 for admin/API)
        proxy_pass http://5.78.82.156:3000/api/cache-events;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # SSE specific headers
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Upgrade $http_upgrade;
        
        # CORS headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Cache-Control" always;
    }

    # Admin interface (port 3000)
    location /admin {
        proxy_pass http://5.78.82.156:3000/admin;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_http_version 1.1;
    }

    # Health check endpoint (port 3000)
    location /health {
        proxy_pass http://5.78.82.156:3000/health;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_http_version 1.1;
    }

    # Main application (port 4000 - frontend)
    location / {
        proxy_pass http://5.78.82.156:4000;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_http_version 1.1;
    }
}
