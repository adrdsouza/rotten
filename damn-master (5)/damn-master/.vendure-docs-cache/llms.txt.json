{"content":"# Vendure Docs\n\n## Docs\n\n- [Auth](https://docs.vendure.io/guides/core-concepts/auth): Authentication is the process of determining the identity of a user. Common ways of authenticating a user are by asking the user for secret credentials (username & password) or by a third-party authentication provider such as Facebook or Google login.\n- [Channels](https://docs.vendure.io/guides/core-concepts/channels): Channels are a feature of Vendure which allows multiple sales channels to be represented in a single Vendure instance. A Channel allows you to:\n- [Collections](https://docs.vendure.io/guides/core-concepts/collections): Collections are used to categorize and organize your catalog. A collection\n- [Customers](https://docs.vendure.io/guides/core-concepts/customers): A Customer is a person who can buy from your shop. A customer can have one or more\n- [Email & Notifications](https://docs.vendure.io/guides/core-concepts/email): A typical ecommerce application needs to notify customers of certain events, such as when they place an order or\n- [Images & Assets](https://docs.vendure.io/guides/core-concepts/images-assets): Assets are used to store files such as images, videos, PDFs, etc. Assets can be\n- [Money & Currency](https://docs.vendure.io/guides/core-concepts/money): In Vendure, monetary values are stored as integers using the minor unit of the selected currency.\n- [Orders](https://docs.vendure.io/guides/core-concepts/orders): In Vendure, the Order entity represents the entire lifecycle of an order, from the moment a customer adds an item to their cart, through to the point where the order is completed and the customer has received their goods.\n- [Payment](https://docs.vendure.io/guides/core-concepts/payment): Vendure can support many kinds of payment workflows, such as authorizing and capturing payment in a single step upon checkout or authorizing on checkout and then capturing on fulfillment.\n- [Products](https://docs.vendure.io/guides/core-concepts/products): Your catalog is composed of Products and ProductVariants.\n- [Promotions](https://docs.vendure.io/guides/core-concepts/promotions): Promotions are a means of offering discounts on an order based on various criteria. A Promotion consists of conditions and actions.\n- [Shipping & Fulfillment](https://docs.vendure.io/guides/core-concepts/shipping): Shipping in Vendure is handled by ShippingMethods.\n- [Stock Control](https://docs.vendure.io/guides/core-concepts/stock-control): Vendure includes features to help manage your stock levels, stock allocations and back orders. The basic purpose is to help you keep track of how many of a given ProductVariant you have available to sell.\n- [Taxes](https://docs.vendure.io/guides/core-concepts/taxes): E-commerce applications need to correctly handle taxes such as sales tax or value added tax (VAT). In Vendure, tax handling consists of:\n- [Deploying to Digital Ocean](https://docs.vendure.io/guides/deployment/deploy-to-digital-ocean-app-platform): Deploy to Digital Ocean App Platform\n- [Deploying to Google Cloud Run](https://docs.vendure.io/guides/deployment/deploy-to-google-cloud-run): ./deploy-to-gcr.webp\n- [Deploying to Northflank](https://docs.vendure.io/guides/deployment/deploy-to-northflank): ./deploy-to-northflank.webp\n- [Deploying to Railway](https://docs.vendure.io/guides/deployment/deploy-to-railway): Deploy to Railway\n- [Deploying to Render](https://docs.vendure.io/guides/deployment/deploy-to-render): Deploy to Render\n- [Deploying the Admin UI](https://docs.vendure.io/guides/deployment/deploying-admin-ui): Compiling the Admin UI\n- [Getting data into production](https://docs.vendure.io/guides/deployment/getting-data-into-production): Once you have set up your production deployment, you'll need some way to get your products and other data into the system.\n- [Horizontal scaling](https://docs.vendure.io/guides/deployment/horizontal-scaling): \"Horizontal scaling\" refers to increasing the performance capacity of your application by running multiple instances.\n- [Production configuration](https://docs.vendure.io/guides/deployment/production-configuration): This is a guide to the recommended configuration for a production Vendure application.\n- [Server resource requirements](https://docs.vendure.io/guides/deployment/server-resource-requirements): Server resource requirements\n- [Using docker](https://docs.vendure.io/guides/deployment/using-docker): Docker is a technology which allows you to run your Vendure application inside a container.\n- [Cache](https://docs.vendure.io/guides/developer-guide/cache): Caching is a technique to improve performance of a system by saving the results of expensive\n- [Implementing ChannelAware](https://docs.vendure.io/guides/developer-guide/channel-aware): Defining channel-aware entities\n- [CLI](https://docs.vendure.io/guides/developer-guide/cli): The Vendure CLI is a command-line tool for boosting your productivity as a developer by automating common tasks\n- [Configuration](https://docs.vendure.io/guides/developer-guide/configuration): Every aspect of the Vendure server is configured via a single, central VendureConfig object. This object is passed into the bootstrap and bootstrapWorker functions to start up the Vendure server and worker respectively.\n- [Custom Fields](https://docs.vendure.io/guides/developer-guide/custom-fields): Custom fields allow you to add your own custom data properties to almost every Vendure entity. The entities which may have custom fields defined are listed in the CustomFields interface documentation.\n- [Define custom permissions](https://docs.vendure.io/guides/developer-guide/custom-permissions): Vendure uses a fine-grained access control system based on roles & permissions. This is described in detail in the Auth guide. The built-in Permission enum includes a range of permissions to control create, read, update, and delete access to the built-in entities.\n- [Custom Strategies in Plugins](https://docs.vendure.io/guides/developer-guide/custom-strategies-in-plugins): When building Vendure plugins, you often need to provide extensible, pluggable implementations for specific features. The strategy pattern is the perfect tool for this, allowing plugin users to customize behavior by providing their own implementations.\n- [Define a database entity](https://docs.vendure.io/guides/developer-guide/database-entity): Use npx vendure add to easily add a new entity to a plugin.\n- [GraphQL Dataloaders](https://docs.vendure.io/guides/developer-guide/dataloaders): Dataloaders are used in GraphQL to solve the so called N+1 problem. This is an advanced performance optimization technique you may\n- [Database subscribers](https://docs.vendure.io/guides/developer-guide/db-subscribers): TypeORM allows us to define subscribers. With a subscriber, we can listen to specific entity events and take actions based on inserts, updates, deletions and more.\n- [Error Handling](https://docs.vendure.io/guides/developer-guide/error-handling): Errors in Vendure can be divided into two categories:\n- [Events](https://docs.vendure.io/guides/developer-guide/events): Vendure emits events which can be subscribed to by plugins. These events are published by the EventBus and\n- [Extend the GraphQL API](https://docs.vendure.io/guides/developer-guide/extend-graphql-api): Extension to the GraphQL API consists of two parts:\n- [Importing Data](https://docs.vendure.io/guides/developer-guide/importing-data): If you have hundreds, thousands or more products, inputting all the data by hand via the Admin UI can be too inefficient. To solve this, Vendure supports bulk-importing product and other data.\n- [Logging](https://docs.vendure.io/guides/developer-guide/logging): Logging allows you to see what is happening inside the Vendure server. It is useful for debugging and for monitoring the health of the server in production.\n- [Breaking API Changes](https://docs.vendure.io/guides/developer-guide/migrating-from-v1/breaking-api-changes): Breaks from updated dependencies\n- [Database Migration](https://docs.vendure.io/guides/developer-guide/migrating-from-v1/database-migration): Vendure v2 introduces a number of breaking changes to the database schema, some of which require quite complex migrations in order to preserve existing data. To make this process as smooth as possible, we have created a migration tool which will handle the hard parts for you!\n- [Migrating from v1](https://docs.vendure.io/guides/developer-guide/migrating-from-v1): This section contains guides for migrating from Vendure v1 to v2.\n- [Storefront Migration](https://docs.vendure.io/guides/developer-guide/migrating-from-v1/storefront-migration): There are relatively few breaking changes that will affect the storefront.\n- [Migrations](https://docs.vendure.io/guides/developer-guide/migrations): Database migrations are needed whenever the database schema changes. This can be caused by:\n- [Nest Devtools](https://docs.vendure.io/guides/developer-guide/nest-devtools): The NestJS core team have built a powerful set of dev tools which can be used to inspect, analyze and debug NestJS applications.\n- [Vendure Overview](https://docs.vendure.io/guides/developer-guide/overview): Read this page to gain a high-level understanding of Vendure and concepts you will need to know to build your application.\n- [Plugins](https://docs.vendure.io/guides/developer-guide/plugins): The heart of Vendure is its plugin system. Plugins not only allow you to instantly add new functionality to your\n- [Add a REST endpoint](https://docs.vendure.io/guides/developer-guide/rest-endpoint): REST-style endpoints can be defined as part of a plugin.\n- [Scheduled Tasks](https://docs.vendure.io/guides/developer-guide/scheduled-tasks): Scheduled tasks are a way of executing some code at pre-defined intervals. There are many examples of work that can be done using scheduled tasks,\n- [Security](https://docs.vendure.io/guides/developer-guide/security): Security of your Vendure application includes considering how to prevent and protect against common security threats such as:\n- [Settings Store](https://docs.vendure.io/guides/developer-guide/settings-store): The Settings Store is a flexible system for storing configuration data with support for scoping, permissions,\n- [Stand-alone CLI Scripts](https://docs.vendure.io/guides/developer-guide/stand-alone-scripts): It is possible to create stand-alone scripts that can be run from the command-line by using the bootstrapWorker function. This can be useful for a variety of use-cases such as running cron jobs or importing data.\n- [Strategies & Configurable Operations](https://docs.vendure.io/guides/developer-guide/strategies-configurable-operations): Vendure is built to be highly configurable and extensible. Two methods of providing this extensibility are strategies and configurable operations.\n- [Testing](https://docs.vendure.io/guides/developer-guide/testing): Vendure plugins allow you to extend all aspects of the standard Vendure server. When a plugin gets somewhat complex (defining new entities, extending the GraphQL schema, implementing custom resolvers), you may wish to create automated tests to ensure your plugin is correct.\n- [The API Layer](https://docs.vendure.io/guides/developer-guide/the-api-layer): Vendure is a headless platform, which means that all functionality is exposed via GraphQL APIs. The API can be thought of\n- [The Service Layer](https://docs.vendure.io/guides/developer-guide/the-service-layer): The service layer is the core of the application. This is where the business logic is implemented, and where\n- [Implementing Translatable](https://docs.vendure.io/guides/developer-guide/translateable): Defining translatable entities\n- [Translations](https://docs.vendure.io/guides/developer-guide/translations): The following items in Vendure can be translated:\n- [Updating Vendure](https://docs.vendure.io/guides/developer-guide/updating): This guide provides guidance for updating the Vendure core framework to a newer version.\n- [Uploading Files](https://docs.vendure.io/guides/developer-guide/uploading-files): Vendure handles file uploads with the GraphQL multipart request specification. Internally, we use the graphql-upload package. Once uploaded, a file is known as an Asset. Assets are typically used for images, but can represent any kind of binary data such as PDF files or videos.\n- [Worker & Job Queue](https://docs.vendure.io/guides/developer-guide/worker-job-queue): The Vendure Worker is a Node.js process responsible for running computationally intensive\n- [Page ActionBar Buttons](https://docs.vendure.io/guides/extending-the-admin-ui/add-actions-to-pages): The ActionBar is the horizontal area at the top of each list or detail page, which contains the main buttons for that page.\n- [Adding UI Translations](https://docs.vendure.io/guides/extending-the-admin-ui/adding-ui-translations): The Vendure Admin UI is fully localizable, allowing you to:\n- [Admin UI Theming & Branding](https://docs.vendure.io/guides/extending-the-admin-ui/admin-ui-theming-branding): The Vendure Admin UI can be themed to your company's style and branding.\n- [Alerts](https://docs.vendure.io/guides/extending-the-admin-ui/alerts): Alerts appear in the top bar of the Admin UI and provide a way of notifying the administrator of important information\n- [Bulk Actions for List Views](https://docs.vendure.io/guides/extending-the-admin-ui/bulk-actions): List views in the Admin UI support bulk actions, which are performed on any selected items in the list. There are a default set of bulk actions that are defined by the Admin UI itself (e.g. delete, assign to channels), but using the @vendure/ui-devit package you are also able to define your own bulk actions.\n- [Creating Detail Views](https://docs.vendure.io/guides/extending-the-admin-ui/creating-detail-views): The two most common type of components you'll be creating in your UI extensions are list components and detail components.\n- [Creating List Views](https://docs.vendure.io/guides/extending-the-admin-ui/creating-list-views): The two most common type of components you'll be creating in your UI extensions are list components and detail components.\n- [Custom DataTable Components](https://docs.vendure.io/guides/extending-the-admin-ui/custom-data-table-components): The Admin UI list views are powered by a data table component which features sorting, advanced filtering, pagination and more. It will also give you the option of displaying any configured custom fields for the entity in question.\n- [Custom Detail Components](https://docs.vendure.io/guides/extending-the-admin-ui/custom-detail-components): Detail views can be extended with custom Angular or React components using the registerCustomDetailComponent and registerReactCustomDetailComponent functions.\n- [Custom Form Inputs](https://docs.vendure.io/guides/extending-the-admin-ui/custom-form-inputs): You can define custom Angular or React components which can be used to render Custom Fields you have defined on your entities as well as configurable args used by custom Configurable Operations.\n- [Custom History Timeline Components](https://docs.vendure.io/guides/extending-the-admin-ui/custom-timeline-components): The Order & Customer detail pages feature a timeline of history entries. Since v1.9.0 it is possible to define custom history entry types - see the HistoryService docs for an example.\n- [Dashboard Widgets](https://docs.vendure.io/guides/extending-the-admin-ui/dashboard-widgets): Dashboard widgets are components which can be added to the Admin UI dashboard. These widgets are useful for displaying information which is commonly required by administrations, such as sales summaries, lists of incomplete orders, notifications, etc.\n- [Defining routes](https://docs.vendure.io/guides/extending-the-admin-ui/defining-routes): Routes allow you to mount entirely custom components at a given URL in the Admin UI. New routes will appear in this area of the Admin UI:\n- [Getting Started](https://docs.vendure.io/guides/extending-the-admin-ui/getting-started): The Angular-based Admin UI has been replaced by the new React Admin Dashboard. The Angular Admin UI will not be maintained after July 2026. Until then, we will continue patching critical bugs and security issues. Community contributions will always be merged and released.\n- [Modify the Nav Menu](https://docs.vendure.io/guides/extending-the-admin-ui/nav-menu): The Nav Menu is the main navigation for the Admin UI, located on the left-hand side when in desktop mode. It is used to provide top-level\n- [Page Tabs](https://docs.vendure.io/guides/extending-the-admin-ui/page-tabs): You can add your own tabs to any of the Admin UI's list or detail pages using the registerPageTab function. For example, to add a new tab to the product detail page for displaying product reviews:\n- [UI Component Library](https://docs.vendure.io/guides/extending-the-admin-ui/ui-library): The Admin UI is built on a customized version of the Clarity Design System. This means that if you are writing Angular-based UI extensions, you can use the same components that are used in the rest of the Admin UI. If you are using React, we are gradually exporting the most-used components for use with React.\n- [Using Other Frameworks](https://docs.vendure.io/guides/extending-the-admin-ui/using-other-frameworks): From version 2.1.0, Admin UI extensions can be written in either Angular or React. Prior to v2.1.0, only Angular was natively supported.\n- [Action Bar Items](https://docs.vendure.io/guides/extending-the-dashboard/action-bar-items): Like in the old Admin UI, we have the concept of the \"action bar\", which is the bar at the top of the page where you can add\n- [Tutorial: Building a CMS Plugin](https://docs.vendure.io/guides/extending-the-dashboard/cms-tutorial): Follow this guide to see how to extend the dashboard with custom pages, blocks, and components.\n- [Display Components](https://docs.vendure.io/guides/extending-the-dashboard/custom-form-components/display-components): Display components allow you to customize how data is rendered in forms, tables, detail views, and other places in the dashboard. They provide a way to create rich visualizations and presentations of your data beyond the standard text rendering.\n- [Custom Form Elements](https://docs.vendure.io/guides/extending-the-dashboard/custom-form-components): The dashboard allows you to create custom form elements that provide complete control over how data is rendered and how users interact with forms. This includes:\n- [Input Components](https://docs.vendure.io/guides/extending-the-dashboard/custom-form-components/input-components): Input components allow you to replace specific input fields in existing dashboard forms with custom implementations. They provide a way to enhance the user experience by offering specialized input controls for particular data types or use cases.\n- [Relation Selectors](https://docs.vendure.io/guides/extending-the-dashboard/custom-form-components/relation-selectors): Relation selector components provide a powerful way to select related entities in your dashboard forms. They support both single and multi-selection modes with built-in search, infinite scroll pagination, and complete TypeScript type safety.\n- [Deployment](https://docs.vendure.io/guides/extending-the-dashboard/deployment): The Vendure Dashboard offers flexible deployment options. You can either serve it directly through your Vendure Server using the DashboardPlugin, or host it independently as a static site.\n- [Extending the Dashboard](https://docs.vendure.io/guides/extending-the-dashboard/extending-overview): This guide covers the core concepts and best practices for extending the Vendure Dashboard. Understanding these fundamentals will help you build robust and maintainable dashboard extensions.\n- [Getting Started](https://docs.vendure.io/guides/extending-the-dashboard/getting-started): The @vendure/dashboard package is currently RC.1 (release candiate) and can be used in production. There won't be any major breaking API changes anymore. The official release is targeted for the end of August 2025.\n- [Navigation](https://docs.vendure.io/guides/extending-the-dashboard/navigation): The dashboard provides a flexible navigation system that allows you to add custom navigation sections and menu items. Navigation items are organized into sections that can be placed in either the \"Platform\" (top) or \"Administration\" (bottom) areas of the sidebar.\n- [Page Blocks](https://docs.vendure.io/guides/extending-the-dashboard/page-blocks): In the Dashboard, all pages are built from blocks. Every block has a pageId and a blockId which uniquely locates it in the\n- [Tech Stack](https://docs.vendure.io/guides/extending-the-dashboard/tech-stack): The Vendure Dashboard is built on a modern stack of technologies that provide a great developer experience and powerful capabilities for building custom extensions.\n- [Dashboard Theming](https://docs.vendure.io/guides/extending-the-dashboard/theming): The Vendure dashboard uses a modern theming system based on CSS custom properties and Tailwind CSS . This guide shows you how to customize the colors and styles by modifying the theme variables in the Vite plugin.\n- [Introducing GraphQL](https://docs.vendure.io/guides/getting-started/graphql-intro): Vendure uses GraphQL as its API layer.\n- [Installation](https://docs.vendure.io/guides/getting-started/installation): Requirements\n- [Try the API](https://docs.vendure.io/guides/getting-started/try-the-api): Once you have successfully installed Vendure locally following the installation guide,\n- [GraphQL Code Generation](https://docs.vendure.io/guides/how-to/codegen): Code generation means the automatic generation of TypeScript types based on your GraphQL schema and your GraphQL operations.\n- [Configurable Products](https://docs.vendure.io/guides/how-to/configurable-products): A \"configurable product\" is one where aspects can be configured by the customer, and are unrelated to the product's variants. Examples include:\n- [Digital Products](https://docs.vendure.io/guides/how-to/digital-products): Digital products include things like ebooks, online courses, and software. They are products that are delivered to the customer electronically, and do not require\n- [GitHub OAuth Authentication](https://docs.vendure.io/guides/how-to/github-oauth-authentication): The complete source of the following example plugin can be found here: example-plugins/github-auth-plugin\n- [Google OAuth Authentication](https://docs.vendure.io/guides/how-to/google-oauth-authentication): The complete source of the following example plugin can be found here: example-plugins/google-auth-plugin\n- [Multi-vendor Marketplaces](https://docs.vendure.io/guides/how-to/multi-vendor-marketplaces): Vendure v2.0 introduced a number of changes and new APIs to enable developers to build multi-vendor marketplace apps.\n- [Paginated lists](https://docs.vendure.io/guides/how-to/paginated-list): Vendure's list queries follow a set pattern which allows for pagination, filtering & sorting. This guide will demonstrate how\n- [Publishing a Plugin](https://docs.vendure.io/guides/how-to/publish-plugin): Vendure's plugin-based architecture means you'll be writing a lot of plugins.\n- [Open Telemetry](https://docs.vendure.io/guides/how-to/telemetry): Open Telemetry is a set of APIs, libraries, agents, and instrumentation to provide observability for applications.\n- [Managing the Active Order](https://docs.vendure.io/guides/storefront/active-order): The \"active order\" is what is also known as the \"cart\" - it is the order that is currently being worked on by the customer.\n- [Checkout Flow](https://docs.vendure.io/guides/storefront/checkout-flow): Once the customer has added the desired products to the active order, it's time to check out.\n- [Storefront GraphQL Code Generation](https://docs.vendure.io/guides/storefront/codegen): Code generation means the automatic generation of TypeScript types based on your GraphQL schema and your GraphQL operations.\n- [Connect to the API](https://docs.vendure.io/guides/storefront/connect-api): The first thing you'll need to do is to connect your storefront app to the Shop API. The Shop API is a GraphQL API\n- [Customer Accounts](https://docs.vendure.io/guides/storefront/customer-accounts): Customers can register accounts and thereby gain the ability to:\n- [Listing Products](https://docs.vendure.io/guides/storefront/listing-products): Products are listed when:\n- [Navigation Menu](https://docs.vendure.io/guides/storefront/navigation-menu): A navigation menu allows your customers to navigate your store and find the products they are looking for.\n- [Order Workflow](https://docs.vendure.io/guides/storefront/order-workflow): An Order is a collection of one or more ProductVariants which can be purchased by a Customer. Orders are represented internally by the Order entity and in the GraphQL API by the Order type.\n- [Product Detail Page](https://docs.vendure.io/guides/storefront/product-detail): The product detail page (often abbreviated to PDP) is the page that shows the details of a product and allows the user to add it to their cart.\n- [Storefront Starters](https://docs.vendure.io/guides/storefront/storefront-starters): Since building an entire Storefront from scratch can be a daunting task, we have prepared a few starter projects that you can use as a base for your own storefront.\n- [ActionBarContext](https://docs.vendure.io/reference/admin-ui-api/action-bar/action-bar-context): ActionBarContext\n- [ActionBarDropdownMenuItem](https://docs.vendure.io/reference/admin-ui-api/action-bar/action-bar-dropdown-menu-item): ActionBarDropdownMenuItem\n- [ActionBarItem](https://docs.vendure.io/reference/admin-ui-api/action-bar/action-bar-item): ActionBarItem\n- [ActionBarLocationId](https://docs.vendure.io/reference/admin-ui-api/action-bar/action-bar-location-id): ActionBarLocationId\n- [AddActionBarDropdownMenuItem](https://docs.vendure.io/reference/admin-ui-api/action-bar/add-action-bar-dropdown-menu-item): addActionBarDropdownMenuItem\n- [AddActionBarItem](https://docs.vendure.io/reference/admin-ui-api/action-bar/add-action-bar-item): addActionBarItem\n- [Action Bar](https://docs.vendure.io/reference/admin-ui-api/action-bar): \n- [PageLocationId](https://docs.vendure.io/reference/admin-ui-api/action-bar/page-location-id): PageLocationId\n- [RouterLinkDefinition](https://docs.vendure.io/reference/admin-ui-api/action-bar/router-link-definition): RouterLinkDefinition\n- [AlertConfig](https://docs.vendure.io/reference/admin-ui-api/alerts/alert-config): AlertConfig\n- [AlertContext](https://docs.vendure.io/reference/admin-ui-api/alerts/alert-context): AlertContext\n- [Alerts](https://docs.vendure.io/reference/admin-ui-api/alerts): \n- [RegisterAlert](https://docs.vendure.io/reference/admin-ui-api/alerts/register-alert): registerAlert\n- [BulkAction](https://docs.vendure.io/reference/admin-ui-api/bulk-actions/bulk-action): BulkAction\n- [Bulk Actions](https://docs.vendure.io/reference/admin-ui-api/bulk-actions): \n- [RegisterBulkAction](https://docs.vendure.io/reference/admin-ui-api/bulk-actions/register-bulk-action): registerBulkAction\n- [AssetPickerDialogComponent](https://docs.vendure.io/reference/admin-ui-api/components/asset-picker-dialog-component): AssetPickerDialogComponent\n- [ChipComponent](https://docs.vendure.io/reference/admin-ui-api/components/chip-component): ChipComponent\n- [CurrencyInputComponent](https://docs.vendure.io/reference/admin-ui-api/components/currency-input-component): CurrencyInputComponent\n- [DataTableComponent](https://docs.vendure.io/reference/admin-ui-api/components/data-table-component): DataTableComponent\n- [DataTable2Component](https://docs.vendure.io/reference/admin-ui-api/components/data-table2component): DataTable2Component\n- [DatetimePickerComponent](https://docs.vendure.io/reference/admin-ui-api/components/datetime-picker-component): DatetimePickerComponent\n- [DropdownComponent](https://docs.vendure.io/reference/admin-ui-api/components/dropdown-component): DropdownComponent\n- [FacetValueSelectorComponent](https://docs.vendure.io/reference/admin-ui-api/components/facet-value-selector-component): FacetValueSelectorComponent\n- [Components](https://docs.vendure.io/reference/admin-ui-api/components): \n- [ObjectTreeComponent](https://docs.vendure.io/reference/admin-ui-api/components/object-tree-component): ObjectTreeComponent\n- [OrderStateLabelComponent](https://docs.vendure.io/reference/admin-ui-api/components/order-state-label-component): OrderStateLabelComponent\n- [ProductVariantSelectorComponent](https://docs.vendure.io/reference/admin-ui-api/components/product-variant-selector-component): ProductVariantSelectorComponent\n- [RichTextEditorComponent](https://docs.vendure.io/reference/admin-ui-api/components/rich-text-editor-component): RichTextEditorComponent\n- [ZoneSelectorComponent](https://docs.vendure.io/reference/admin-ui-api/components/zone-selector-component): ZoneSelectorComponent\n- [CustomDetailComponent](https://docs.vendure.io/reference/admin-ui-api/custom-detail-components/custom-detail-component): CustomDetailComponent\n- [CustomDetailComponentConfig](https://docs.vendure.io/reference/admin-ui-api/custom-detail-components/custom-detail-component-config): CustomDetailComponentConfig\n- [CustomDetailComponentLocationId](https://docs.vendure.io/reference/admin-ui-api/custom-detail-components/custom-detail-component-location-id): CustomDetailComponentLocationId\n- [Custom Detail Components](https://docs.vendure.io/reference/admin-ui-api/custom-detail-components): \n- [RegisterCustomDetailComponent](https://docs.vendure.io/reference/admin-ui-api/custom-detail-components/register-custom-detail-component): registerCustomDetailComponent\n- [CustomerHistoryEntryComponent](https://docs.vendure.io/reference/admin-ui-api/custom-history-entry-components/customer-history-entry-component): CustomerHistoryEntryComponent\n- [HistoryEntryComponent](https://docs.vendure.io/reference/admin-ui-api/custom-history-entry-components/history-entry-component): HistoryEntryComponent\n- [HistoryEntryConfig](https://docs.vendure.io/reference/admin-ui-api/custom-history-entry-components/history-entry-config): HistoryEntryConfig\n- [Custom History Entry Components](https://docs.vendure.io/reference/admin-ui-api/custom-history-entry-components): \n- [OrderHistoryEntryComponent](https://docs.vendure.io/reference/admin-ui-api/custom-history-entry-components/order-history-entry-component): OrderHistoryEntryComponent\n- [RegisterHistoryEntryComponent](https://docs.vendure.io/reference/admin-ui-api/custom-history-entry-components/register-history-entry-component): registerHistoryEntryComponent\n- [Default Inputs](https://docs.vendure.io/reference/admin-ui-api/custom-input-components/default-inputs): BooleanFormInputComponent\n- [FormInputComponent](https://docs.vendure.io/reference/admin-ui-api/custom-input-components/form-input-component): FormInputComponent\n- [Custom Input Components](https://docs.vendure.io/reference/admin-ui-api/custom-input-components): \n- [RegisterFormInputComponent](https://docs.vendure.io/reference/admin-ui-api/custom-input-components/register-form-input-component): registerFormInputComponent\n- [CustomColumnComponent](https://docs.vendure.io/reference/admin-ui-api/custom-table-components/custom-column-component): CustomColumnComponent\n- [DataTableComponentConfig](https://docs.vendure.io/reference/admin-ui-api/custom-table-components/data-table-component-config): DataTableComponentConfig\n- [Custom Table Components](https://docs.vendure.io/reference/admin-ui-api/custom-table-components): \n- [RegisterDataTableComponent](https://docs.vendure.io/reference/admin-ui-api/custom-table-components/register-data-table-component): registerDataTableComponent\n- [DashboardWidgetConfig](https://docs.vendure.io/reference/admin-ui-api/dashboard-widgets/dashboard-widget-config): DashboardWidgetConfig\n- [Dashboard Widgets](https://docs.vendure.io/reference/admin-ui-api/dashboard-widgets): \n- [RegisterDashboardWidget](https://docs.vendure.io/reference/admin-ui-api/dashboard-widgets/register-dashboard-widget): registerDashboardWidget\n- [SetDashboardWidgetLayout](https://docs.vendure.io/reference/admin-ui-api/dashboard-widgets/set-dashboard-widget-layout): setDashboardWidgetLayout\n- [WidgetLayoutDefinition](https://docs.vendure.io/reference/admin-ui-api/dashboard-widgets/widget-layout-definition): WidgetLayoutDefinition\n- [IfMultichannelDirective](https://docs.vendure.io/reference/admin-ui-api/directives/if-multichannel-directive): IfMultichannelDirective\n- [IfPermissionsDirective](https://docs.vendure.io/reference/admin-ui-api/directives/if-permissions-directive): IfPermissionsDirective\n- [Directives](https://docs.vendure.io/reference/admin-ui-api/directives): \n- [Admin UI API](https://docs.vendure.io/reference/admin-ui-api): These APIs are used when building your own custom extensions to the Admin UI provided by the AdminUiPlugin.\n- [BaseDetailComponent](https://docs.vendure.io/reference/admin-ui-api/list-detail-views/base-detail-component): BaseDetailComponent\n- [BaseEntityResolver](https://docs.vendure.io/reference/admin-ui-api/list-detail-views/base-entity-resolver): BaseEntityResolver\n- [BaseListComponent](https://docs.vendure.io/reference/admin-ui-api/list-detail-views/base-list-component): BaseListComponent\n- [DetailComponentWithResolver](https://docs.vendure.io/reference/admin-ui-api/list-detail-views/detail-component-with-resolver): detailComponentWithResolver\n- [List Detail Views](https://docs.vendure.io/reference/admin-ui-api/list-detail-views): \n- [TypedBaseDetailComponent](https://docs.vendure.io/reference/admin-ui-api/list-detail-views/typed-base-detail-component): TypedBaseDetailComponent\n- [TypedBaseListComponent](https://docs.vendure.io/reference/admin-ui-api/list-detail-views/typed-base-list-component): TypedBaseListComponent\n- [AddNavMenuItem](https://docs.vendure.io/reference/admin-ui-api/nav-menu/add-nav-menu-item): addNavMenuItem\n- [AddNavMenuSection](https://docs.vendure.io/reference/admin-ui-api/nav-menu/add-nav-menu-section): addNavMenuSection\n- [Nav Menu](https://docs.vendure.io/reference/admin-ui-api/nav-menu): \n- [NavMenuItem](https://docs.vendure.io/reference/admin-ui-api/nav-menu/nav-menu-item): NavMenuItem\n- [NavMenuSection](https://docs.vendure.io/reference/admin-ui-api/nav-menu/nav-menu-section): NavMenuSection\n- [Navigation Types](https://docs.vendure.io/reference/admin-ui-api/nav-menu/navigation-types): NavMenuBadge\n- [AssetPreviewPipe](https://docs.vendure.io/reference/admin-ui-api/pipes/asset-preview-pipe): AssetPreviewPipe\n- [DurationPipe](https://docs.vendure.io/reference/admin-ui-api/pipes/duration-pipe): DurationPipe\n- [FileSizePipe](https://docs.vendure.io/reference/admin-ui-api/pipes/file-size-pipe): FileSizePipe\n- [HasPermissionPipe](https://docs.vendure.io/reference/admin-ui-api/pipes/has-permission-pipe): HasPermissionPipe\n- [Pipes](https://docs.vendure.io/reference/admin-ui-api/pipes): \n- [LocaleCurrencyNamePipe](https://docs.vendure.io/reference/admin-ui-api/pipes/locale-currency-name-pipe): LocaleCurrencyNamePipe\n- [LocaleCurrencyPipe](https://docs.vendure.io/reference/admin-ui-api/pipes/locale-currency-pipe): LocaleCurrencyPipe\n- [LocaleDatePipe](https://docs.vendure.io/reference/admin-ui-api/pipes/locale-date-pipe): LocaleDatePipe\n- [LocaleLanguageNamePipe](https://docs.vendure.io/reference/admin-ui-api/pipes/locale-language-name-pipe): LocaleLanguageNamePipe\n- [LocaleRegionNamePipe](https://docs.vendure.io/reference/admin-ui-api/pipes/locale-region-name-pipe): LocaleRegionNamePipe\n- [TimeAgoPipe](https://docs.vendure.io/reference/admin-ui-api/pipes/time-ago-pipe): TimeAgoPipe\n- [ActionBar](https://docs.vendure.io/reference/admin-ui-api/react-components/action-bar): ActionBar\n- [Card](https://docs.vendure.io/reference/admin-ui-api/react-components/card): Card\n- [CdsIcon](https://docs.vendure.io/reference/admin-ui-api/react-components/cds-icon): CdsIcon\n- [FormField](https://docs.vendure.io/reference/admin-ui-api/react-components/form-field): FormField\n- [React Components](https://docs.vendure.io/reference/admin-ui-api/react-components): \n- [Link](https://docs.vendure.io/reference/admin-ui-api/react-components/link): Link\n- [PageBlock](https://docs.vendure.io/reference/admin-ui-api/react-components/page-block): PageBlock\n- [PageDetailLayout](https://docs.vendure.io/reference/admin-ui-api/react-components/page-detail-layout): PageDetailLayout\n- [RichTextEditor](https://docs.vendure.io/reference/admin-ui-api/react-components/rich-text-editor): RichTextEditor\n- [React Extensions](https://docs.vendure.io/reference/admin-ui-api/react-extensions): \n- [ReactCustomDetailComponentConfig](https://docs.vendure.io/reference/admin-ui-api/react-extensions/react-custom-detail-component-config): ReactCustomDetailComponentConfig\n- [ReactDataTableComponentConfig](https://docs.vendure.io/reference/admin-ui-api/react-extensions/react-data-table-component-config): ReactDataTableComponentConfig\n- [RegisterReactCustomDetailComponent](https://docs.vendure.io/reference/admin-ui-api/react-extensions/register-react-custom-detail-component): registerReactCustomDetailComponent\n- [RegisterReactDataTableComponent](https://docs.vendure.io/reference/admin-ui-api/react-extensions/register-react-data-table-component): registerReactDataTableComponent\n- [RegisterReactFormInputComponent](https://docs.vendure.io/reference/admin-ui-api/react-extensions/register-react-form-input-component): registerReactFormInputComponent\n- [RegisterReactRouteComponent](https://docs.vendure.io/reference/admin-ui-api/react-extensions/register-react-route-component): registerReactRouteComponent\n- [RegisterReactRouteComponentOptions](https://docs.vendure.io/reference/admin-ui-api/react-extensions/register-react-route-component-options): RegisterReactRouteComponentOptions\n- [React Hooks](https://docs.vendure.io/reference/admin-ui-api/react-hooks): \n- [UseDetailComponentData](https://docs.vendure.io/reference/admin-ui-api/react-hooks/use-detail-component-data): useDetailComponentData\n- [UseFormControl](https://docs.vendure.io/reference/admin-ui-api/react-hooks/use-form-control): useFormControl\n- [UseInjector](https://docs.vendure.io/reference/admin-ui-api/react-hooks/use-injector): useInjector\n- [UseLazyQuery](https://docs.vendure.io/reference/admin-ui-api/react-hooks/use-lazy-query): useLazyQuery\n- [UseMutation](https://docs.vendure.io/reference/admin-ui-api/react-hooks/use-mutation): useMutation\n- [UsePageMetadata](https://docs.vendure.io/reference/admin-ui-api/react-hooks/use-page-metadata): usePageMetadata\n- [UseQuery](https://docs.vendure.io/reference/admin-ui-api/react-hooks/use-query): useQuery\n- [UseRichTextEditor](https://docs.vendure.io/reference/admin-ui-api/react-hooks/use-rich-text-editor): useRichTextEditor\n- [UseRouteParams](https://docs.vendure.io/reference/admin-ui-api/react-hooks/use-route-params): useRouteParams\n- [Routes](https://docs.vendure.io/reference/admin-ui-api/routes): \n- [RegisterRouteComponent](https://docs.vendure.io/reference/admin-ui-api/routes/register-route-component): registerRouteComponent\n- [RegisterRouteComponentOptions](https://docs.vendure.io/reference/admin-ui-api/routes/register-route-component-options): RegisterRouteComponentOptions\n- [DataService](https://docs.vendure.io/reference/admin-ui-api/services/data-service): DataService\n- [Services](https://docs.vendure.io/reference/admin-ui-api/services): \n- [ModalService](https://docs.vendure.io/reference/admin-ui-api/services/modal-service): ModalService\n- [NotificationService](https://docs.vendure.io/reference/admin-ui-api/services/notification-service): NotificationService\n- [Tabs](https://docs.vendure.io/reference/admin-ui-api/tabs): \n- [PageTabConfig](https://docs.vendure.io/reference/admin-ui-api/tabs/page-tab-config): PageTabConfig\n- [RegisterPageTab](https://docs.vendure.io/reference/admin-ui-api/tabs/register-page-tab): registerPageTab\n- [AdminUiExtension](https://docs.vendure.io/reference/admin-ui-api/ui-devkit/admin-ui-extension): AdminUiExtension\n- [CompileUiExtensions](https://docs.vendure.io/reference/admin-ui-api/ui-devkit/compile-ui-extensions): compileUiExtensions\n- [Helpers](https://docs.vendure.io/reference/admin-ui-api/ui-devkit/helpers): setBranding\n- [Ui Devkit](https://docs.vendure.io/reference/admin-ui-api/ui-devkit): \n- [UiDevkitClient](https://docs.vendure.io/reference/admin-ui-api/ui-devkit/ui-devkit-client): setTargetOrigin\n- [UiExtensionBuildCommand](https://docs.vendure.io/reference/admin-ui-api/ui-devkit/ui-extension-build-command): UiExtensionBuildCommand\n- [UiExtensionCompilerOptions](https://docs.vendure.io/reference/admin-ui-api/ui-devkit/ui-extension-compiler-options): UiExtensionCompilerOptions\n- [UiExtensionCompilerProcessArgument](https://docs.vendure.io/reference/admin-ui-api/ui-devkit/ui-extension-compiler-process-argument): UiExtensionCompilerProcessArgument\n- [AdminUiPluginOptions](https://docs.vendure.io/reference/core-plugins/admin-ui-plugin/admin-ui-plugin-options): AdminUiPluginOptions\n- [AdminUiPlugin](https://docs.vendure.io/reference/core-plugins/admin-ui-plugin): AdminUiPlugin\n- [AssetServerOptions](https://docs.vendure.io/reference/core-plugins/asset-server-plugin/asset-server-options): AssetServerOptions\n- [CacheConfig](https://docs.vendure.io/reference/core-plugins/asset-server-plugin/cache-config): CacheConfig\n- [HashedAssetNamingStrategy](https://docs.vendure.io/reference/core-plugins/asset-server-plugin/hashed-asset-naming-strategy): HashedAssetNamingStrategy\n- [ImageTransformMode](https://docs.vendure.io/reference/core-plugins/asset-server-plugin/image-transform-mode): ImageTransformMode\n- [ImageTransformPreset](https://docs.vendure.io/reference/core-plugins/asset-server-plugin/image-transform-preset): ImageTransformPreset\n- [ImageTransformStrategy](https://docs.vendure.io/reference/core-plugins/asset-server-plugin/image-transform-strategy): ImageTransformStrategy\n- [AssetServerPlugin](https://docs.vendure.io/reference/core-plugins/asset-server-plugin): AssetServerPlugin\n- [LocalAssetStorageStrategy](https://docs.vendure.io/reference/core-plugins/asset-server-plugin/local-asset-storage-strategy): LocalAssetStorageStrategy\n- [PresetOnlyStrategy](https://docs.vendure.io/reference/core-plugins/asset-server-plugin/preset-only-strategy): PresetOnlyStrategy\n- [S3AssetStorageStrategy](https://docs.vendure.io/reference/core-plugins/asset-server-plugin/s3asset-storage-strategy): S3AssetStorageStrategy\n- [SharpAssetPreviewStrategy](https://docs.vendure.io/reference/core-plugins/asset-server-plugin/sharp-asset-preview-strategy): SharpAssetPreviewStrategy\n- [ElasticsearchOptions](https://docs.vendure.io/reference/core-plugins/elasticsearch-plugin/elasticsearch-options): ElasticsearchOptions\n- [ElasticsearchPlugin](https://docs.vendure.io/reference/core-plugins/elasticsearch-plugin): ElasticsearchPlugin\n- [EmailEventHandler](https://docs.vendure.io/reference/core-plugins/email-plugin/email-event-handler): EmailEventHandler\n- [EmailEventHandlerWithAsyncData](https://docs.vendure.io/reference/core-plugins/email-plugin/email-event-handler-with-async-data): EmailEventHandlerWithAsyncData\n- [EmailEventListener](https://docs.vendure.io/reference/core-plugins/email-plugin/email-event-listener): EmailEventListener\n- [EmailGenerator](https://docs.vendure.io/reference/core-plugins/email-plugin/email-generator): EmailGenerator\n- [EmailPluginOptions](https://docs.vendure.io/reference/core-plugins/email-plugin/email-plugin-options): EmailPluginOptions\n- [Email Plugin Types](https://docs.vendure.io/reference/core-plugins/email-plugin/email-plugin-types): EventWithContext\n- [EmailSendEvent](https://docs.vendure.io/reference/core-plugins/email-plugin/email-send-event): EmailSendEvent\n- [EmailSender](https://docs.vendure.io/reference/core-plugins/email-plugin/email-sender): EmailSender\n- [Email Utils](https://docs.vendure.io/reference/core-plugins/email-plugin/email-utils): transformOrderLineAssetUrls\n- [EmailPlugin](https://docs.vendure.io/reference/core-plugins/email-plugin): EmailPlugin\n- [TemplateLoader](https://docs.vendure.io/reference/core-plugins/email-plugin/template-loader): TemplateLoader\n- [Transport Options](https://docs.vendure.io/reference/core-plugins/email-plugin/transport-options): EmailTransportOptions\n- [GraphiqlPlugin](https://docs.vendure.io/reference/core-plugins/graphiql-plugin): GraphiqlPlugin\n- [DefaultVendureComplexityEstimator](https://docs.vendure.io/reference/core-plugins/harden-plugin/default-vendure-complexity-estimator): defaultVendureComplexityEstimator\n- [HardenPluginOptions](https://docs.vendure.io/reference/core-plugins/harden-plugin/harden-plugin-options): HardenPluginOptions\n- [HardenPlugin](https://docs.vendure.io/reference/core-plugins/harden-plugin): HardenPlugin\n- [Core Plugins](https://docs.vendure.io/reference/core-plugins): \n- [BullMQJobQueuePlugin](https://docs.vendure.io/reference/core-plugins/job-queue-plugin/bull-mqjob-queue-plugin): BullMQJobQueuePlugin\n- [BullMQJobQueueStrategy](https://docs.vendure.io/reference/core-plugins/job-queue-plugin/bull-mqjob-queue-strategy): BullMQJobQueueStrategy\n- [BullMQPluginOptions](https://docs.vendure.io/reference/core-plugins/job-queue-plugin/bull-mqplugin-options): BullMQPluginOptions\n- [Job Queue Plugin](https://docs.vendure.io/reference/core-plugins/job-queue-plugin): \n- [PubSubJobQueueStrategy](https://docs.vendure.io/reference/core-plugins/job-queue-plugin/pub-sub-job-queue-strategy): PubSubJobQueueStrategy\n- [PubSubPlugin](https://docs.vendure.io/reference/core-plugins/job-queue-plugin/pub-sub-plugin): PubSubPlugin\n- [BraintreePlugin](https://docs.vendure.io/reference/core-plugins/payments-plugin/braintree-plugin): BraintreePlugin\n- [Payments Plugin](https://docs.vendure.io/reference/core-plugins/payments-plugin): \n- [MolliePlugin](https://docs.vendure.io/reference/core-plugins/payments-plugin/mollie-plugin): MolliePlugin\n- [StripePlugin](https://docs.vendure.io/reference/core-plugins/payments-plugin/stripe-plugin): StripePlugin\n- [SentryPlugin](https://docs.vendure.io/reference/core-plugins/sentry-plugin): SentryPlugin\n- [SentryPluginOptions](https://docs.vendure.io/reference/core-plugins/sentry-plugin/sentry-plugin-options): SentryPluginOptions\n- [StellatePlugin](https://docs.vendure.io/reference/core-plugins/stellate-plugin): StellatePlugin\n- [PurgeRule](https://docs.vendure.io/reference/core-plugins/stellate-plugin/purge-rule): PurgeRule\n- [StellatePluginOptions](https://docs.vendure.io/reference/core-plugins/stellate-plugin/stellate-plugin-options): StellatePluginOptions\n- [StellateService](https://docs.vendure.io/reference/core-plugins/stellate-plugin/stellate-service): StellateService\n- [GetSdkConfiguration](https://docs.vendure.io/reference/core-plugins/telemetry-plugin/get-sdk-configuration): getSdkConfiguration\n- [TelemetryPlugin](https://docs.vendure.io/reference/core-plugins/telemetry-plugin): TelemetryPlugin\n- [OtelLogger](https://docs.vendure.io/reference/core-plugins/telemetry-plugin/otel-logger): OtelLogger\n- [RegisterMethodHooks](https://docs.vendure.io/reference/core-plugins/telemetry-plugin/register-method-hooks): registerMethodHooks\n- [TelemetryPluginOptions](https://docs.vendure.io/reference/core-plugins/telemetry-plugin/telemetry-plugin-options): TelemetryPluginOptions\n- [DetailPage](https://docs.vendure.io/reference/dashboard/components/detail-page): DetailPage\n- [Components](https://docs.vendure.io/reference/dashboard/components): \n- [ListPage](https://docs.vendure.io/reference/dashboard/components/list-page): ListPage\n- [Page](https://docs.vendure.io/reference/dashboard/components/page): Page\n- [PageActionBar](https://docs.vendure.io/reference/dashboard/components/page-action-bar): PageActionBar\n- [PageBlock](https://docs.vendure.io/reference/dashboard/components/page-block): PageBlock\n- [PageLayout](https://docs.vendure.io/reference/dashboard/components/page-layout): PageLayout\n- [PageTitle](https://docs.vendure.io/reference/dashboard/components/page-title): PageTitle\n- [DashboardAlertDefinition](https://docs.vendure.io/reference/dashboard/extensions/dashboard-alert-definition): DashboardAlertDefinition\n- [DashboardBaseWidgetProps](https://docs.vendure.io/reference/dashboard/extensions/dashboard-base-widget-props): DashboardBaseWidgetProps\n- [DashboardExtension](https://docs.vendure.io/reference/dashboard/extensions/dashboard-extension): DashboardExtension\n- [DashboardWidgetDefinition](https://docs.vendure.io/reference/dashboard/extensions/dashboard-widget-definition): DashboardWidgetDefinition\n- [DashboardWidgetInstance](https://docs.vendure.io/reference/dashboard/extensions/dashboard-widget-instance): DashboardWidgetInstance\n- [DataTable](https://docs.vendure.io/reference/dashboard/extensions/data-table): DashboardDataTableDisplayComponent\n- [DefineDashboardExtension](https://docs.vendure.io/reference/dashboard/extensions/define-dashboard-extension): defineDashboardExtension\n- [DetailForms](https://docs.vendure.io/reference/dashboard/extensions/detail-forms): DashboardDetailFormInputComponent\n- [FormComponents](https://docs.vendure.io/reference/dashboard/extensions/form-components): DashboardCustomFormComponent\n- [Extensions](https://docs.vendure.io/reference/dashboard/extensions): \n- [Layout](https://docs.vendure.io/reference/dashboard/extensions/layout): DashboardActionBarItem\n- [Login](https://docs.vendure.io/reference/dashboard/extensions/login): LoginLogoExtension\n- [Navigation](https://docs.vendure.io/reference/dashboard/extensions/navigation): DashboardRouteDefinition\n- [Hooks](https://docs.vendure.io/reference/dashboard/hooks): \n- [UseAuth](https://docs.vendure.io/reference/dashboard/hooks/use-auth): useAuth\n- [UseChannel](https://docs.vendure.io/reference/dashboard/hooks/use-channel): useChannel\n- [UseDetailPage](https://docs.vendure.io/reference/dashboard/hooks/use-detail-page): useDetailPage\n- [UseLocalFormat](https://docs.vendure.io/reference/dashboard/hooks/use-local-format): useLocalFormat\n- [UsePermissions](https://docs.vendure.io/reference/dashboard/hooks/use-permissions): usePermissions\n- [Enums](https://docs.vendure.io/reference/graphql-api/admin/enums): AdjustmentType\n- [Input Objects](https://docs.vendure.io/reference/graphql-api/admin/input-types): AddItemInput\n- [Mutations](https://docs.vendure.io/reference/graphql-api/admin/mutations): addCustomersToGroup\n- [Types](https://docs.vendure.io/reference/graphql-api/admin/object-types): AddFulfillmentToOrderResult\n- [Queries](https://docs.vendure.io/reference/graphql-api/admin/queries): activeAdministrator\n- [Enums](https://docs.vendure.io/reference/graphql-api/shop/enums): AdjustmentType\n- [Input Objects](https://docs.vendure.io/reference/graphql-api/shop/input-types): AddItemInput\n- [Mutations](https://docs.vendure.io/reference/graphql-api/shop/mutations): addItemToOrder\n- [Types](https://docs.vendure.io/reference/graphql-api/shop/object-types): ActiveOrderResult\n- [Queries](https://docs.vendure.io/reference/graphql-api/shop/queries): activeChannel\n- [Vendure API Reference](https://docs.vendure.io/reference): This section contains reference documentation for the various APIs exposed by Vendure.\n- [AssetNamingStrategy](https://docs.vendure.io/reference/typescript-api/assets/asset-naming-strategy): AssetNamingStrategy\n- [AssetOptions](https://docs.vendure.io/reference/typescript-api/assets/asset-options): AssetOptions\n- [AssetPreviewStrategy](https://docs.vendure.io/reference/typescript-api/assets/asset-preview-strategy): AssetPreviewStrategy\n- [AssetStorageStrategy](https://docs.vendure.io/reference/typescript-api/assets/asset-storage-strategy): AssetStorageStrategy\n- [DefaultAssetNamingStrategy](https://docs.vendure.io/reference/typescript-api/assets/default-asset-naming-strategy): DefaultAssetNamingStrategy\n- [Assets](https://docs.vendure.io/reference/typescript-api/assets): \n- [AuthOptions](https://docs.vendure.io/reference/typescript-api/auth/auth-options): AuthOptions\n- [AuthenticationStrategy](https://docs.vendure.io/reference/typescript-api/auth/authentication-strategy): AuthenticationStrategy\n- [BcryptPasswordHashingStrategy](https://docs.vendure.io/reference/typescript-api/auth/bcrypt-password-hashing-strategy): BcryptPasswordHashingStrategy\n- [CookieOptions](https://docs.vendure.io/reference/typescript-api/auth/cookie-options): CookieOptions\n- [DefaultPasswordValidationStrategy](https://docs.vendure.io/reference/typescript-api/auth/default-password-validation-strategy): DefaultPasswordValidationStrategy\n- [DefaultSessionCacheStrategy](https://docs.vendure.io/reference/typescript-api/auth/default-session-cache-strategy): DefaultSessionCacheStrategy\n- [DefaultVerificationTokenStrategy](https://docs.vendure.io/reference/typescript-api/auth/default-verification-token-strategy): DefaultVerificationTokenStrategy\n- [ExternalAuthenticationService](https://docs.vendure.io/reference/typescript-api/auth/external-authentication-service): ExternalAuthenticationService\n- [InMemorySessionCacheStrategy](https://docs.vendure.io/reference/typescript-api/auth/in-memory-session-cache-strategy): InMemorySessionCacheStrategy\n- [Auth](https://docs.vendure.io/reference/typescript-api/auth): \n- [NativeAuthenticationStrategy](https://docs.vendure.io/reference/typescript-api/auth/native-authentication-strategy): NativeAuthenticationStrategy\n- [NoopSessionCacheStrategy](https://docs.vendure.io/reference/typescript-api/auth/noop-session-cache-strategy): NoopSessionCacheStrategy\n- [PasswordHashingStrategy](https://docs.vendure.io/reference/typescript-api/auth/password-hashing-strategy): PasswordHashingStrategy\n- [PasswordValidationStrategy](https://docs.vendure.io/reference/typescript-api/auth/password-validation-strategy): PasswordValidationStrategy\n- [PermissionDefinition](https://docs.vendure.io/reference/typescript-api/auth/permission-definition): PermissionDefinition\n- [SessionCacheStrategy](https://docs.vendure.io/reference/typescript-api/auth/session-cache-strategy): SessionCacheStrategy\n- [SuperadminCredentials](https://docs.vendure.io/reference/typescript-api/auth/superadmin-credentials): SuperadminCredentials\n- [VerificationTokenStrategy](https://docs.vendure.io/reference/typescript-api/auth/verification-token-strategy): VerificationTokenStrategy\n- [CacheConfig](https://docs.vendure.io/reference/typescript-api/cache/cache-config): CacheConfig\n- [CacheService](https://docs.vendure.io/reference/typescript-api/cache/cache-service): CacheService\n- [CacheStrategy](https://docs.vendure.io/reference/typescript-api/cache/cache-strategy): CacheStrategy\n- [DefaultCachePlugin](https://docs.vendure.io/reference/typescript-api/cache/default-cache-plugin): DefaultCachePlugin\n- [Cache](https://docs.vendure.io/reference/typescript-api/cache): Cache\n- [RedisCachePlugin](https://docs.vendure.io/reference/typescript-api/cache/redis-cache-plugin): RedisCachePlugin\n- [RedisCacheStrategy](https://docs.vendure.io/reference/typescript-api/cache/redis-cache-strategy): RedisCacheStrategy\n- [RequestContextCacheService](https://docs.vendure.io/reference/typescript-api/cache/request-context-cache-service): RequestContextCacheService\n- [SelfRefreshingCache](https://docs.vendure.io/reference/typescript-api/cache/self-refreshing-cache): SelfRefreshingCache\n- [SqlCacheStrategy](https://docs.vendure.io/reference/typescript-api/cache/sql-cache-strategy): SqlCacheStrategy\n- [AdminUiAppConfig](https://docs.vendure.io/reference/typescript-api/common/admin-ui/admin-ui-app-config): AdminUiAppConfig\n- [AdminUiAppDevModeConfig](https://docs.vendure.io/reference/typescript-api/common/admin-ui/admin-ui-app-dev-mode-config): AdminUiAppDevModeConfig\n- [AdminUiConfig](https://docs.vendure.io/reference/typescript-api/common/admin-ui/admin-ui-config): AdminUiConfig\n- [Admin Ui](https://docs.vendure.io/reference/typescript-api/common/admin-ui): \n- [AsyncQueue](https://docs.vendure.io/reference/typescript-api/common/async-queue): AsyncQueue\n- [Bootstrap](https://docs.vendure.io/reference/typescript-api/common/bootstrap): bootstrap\n- [CurrencyCode](https://docs.vendure.io/reference/typescript-api/common/currency-code): CurrencyCode\n- [EntityRelationPaths](https://docs.vendure.io/reference/typescript-api/common/entity-relation-paths): EntityRelationPaths\n- [I18nService](https://docs.vendure.io/reference/typescript-api/common/i18n-service): I18nService\n- [ID](https://docs.vendure.io/reference/typescript-api/common/id): ID\n- [Common](https://docs.vendure.io/reference/typescript-api/common): \n- [InjectableStrategy](https://docs.vendure.io/reference/typescript-api/common/injectable-strategy): InjectableStrategy\n- [Injector](https://docs.vendure.io/reference/typescript-api/common/injector): Injector\n- [JobState](https://docs.vendure.io/reference/typescript-api/common/job-state): JobState\n- [JsonCompatible](https://docs.vendure.io/reference/typescript-api/common/json-compatible): JsonCompatible\n- [LanguageCode](https://docs.vendure.io/reference/typescript-api/common/language-code): LanguageCode\n- [Middleware](https://docs.vendure.io/reference/typescript-api/common/middleware): Middleware\n- [PaginatedList](https://docs.vendure.io/reference/typescript-api/common/paginated-list): PaginatedList\n- [Permission](https://docs.vendure.io/reference/typescript-api/common/permission): Permission\n- [PriceCalculationResult](https://docs.vendure.io/reference/typescript-api/common/price-calculation-result): PriceCalculationResult\n- [ProcessContext](https://docs.vendure.io/reference/typescript-api/common/process-context): ProcessContext\n- [VENDURE_VERSION](https://docs.vendure.io/reference/typescript-api/common/vendure_version): VENDURE_VERSION\n- [ConfigArgType](https://docs.vendure.io/reference/typescript-api/configurable-operation-def/config-arg-type): ConfigArgType\n- [ConfigArgs](https://docs.vendure.io/reference/typescript-api/configurable-operation-def/config-args): ConfigArgs\n- [ConfigurableOperationDefOptions](https://docs.vendure.io/reference/typescript-api/configurable-operation-def/configurable-operation-def-options): ConfigurableOperationDefOptions\n- [DefaultFormComponentId](https://docs.vendure.io/reference/typescript-api/configurable-operation-def/default-form-component-id): DefaultFormComponentId\n- [DefaultFormConfigHash](https://docs.vendure.io/reference/typescript-api/configurable-operation-def/default-form-config-hash): DefaultFormConfigHash\n- [ConfigurableOperationDef](https://docs.vendure.io/reference/typescript-api/configurable-operation-def): ConfigurableOperationDef\n- [LocalizedStringArray](https://docs.vendure.io/reference/typescript-api/configurable-operation-def/localized-string-array): LocalizedStringArray\n- [ApiOptions](https://docs.vendure.io/reference/typescript-api/configuration/api-options): ApiOptions\n- [CollectionFilter](https://docs.vendure.io/reference/typescript-api/configuration/collection-filter): CollectionFilter\n- [DefaultConfig](https://docs.vendure.io/reference/typescript-api/configuration/default-config): defaultConfig\n- [EntityDuplicator](https://docs.vendure.io/reference/typescript-api/configuration/entity-duplicator): EntityDuplicator\n- [EntityId Decorator](https://docs.vendure.io/reference/typescript-api/configuration/entity-id-decorator): EntityId\n- [EntityIdStrategy](https://docs.vendure.io/reference/typescript-api/configuration/entity-id-strategy): AutoIncrementIdStrategy\n- [EntityOptions](https://docs.vendure.io/reference/typescript-api/configuration/entity-options): EntityOptions\n- [Configuration](https://docs.vendure.io/reference/typescript-api/configuration): \n- [MergeConfig](https://docs.vendure.io/reference/typescript-api/configuration/merge-config): mergeConfig\n- [ProductVariantPriceSelectionStrategy](https://docs.vendure.io/reference/typescript-api/configuration/product-variant-price-selection-strategy): ProductVariantPriceSelectionStrategy\n- [ProductVariantPriceUpdateStrategy](https://docs.vendure.io/reference/typescript-api/configuration/product-variant-price-update-strategy): ProductVariantPriceUpdateStrategy\n- [RuntimeVendureConfig](https://docs.vendure.io/reference/typescript-api/configuration/runtime-vendure-config): RuntimeVendureConfig\n- [SettingsStoreFields](https://docs.vendure.io/reference/typescript-api/configuration/settings-store-fields): SettingsStoreFields\n- [SystemOptions](https://docs.vendure.io/reference/typescript-api/configuration/system-options): SystemOptions\n- [TrustProxyOptions](https://docs.vendure.io/reference/typescript-api/configuration/trust-proxy-options): TrustProxyOptions\n- [VendureConfig](https://docs.vendure.io/reference/typescript-api/configuration/vendure-config): VendureConfig\n- [CustomFieldConfig](https://docs.vendure.io/reference/typescript-api/custom-fields/custom-field-config): CustomFieldConfig\n- [CustomFieldType](https://docs.vendure.io/reference/typescript-api/custom-fields/custom-field-type): CustomFieldType\n- [CustomFields](https://docs.vendure.io/reference/typescript-api/custom-fields): CustomFields\n- [StructCustomFieldConfig](https://docs.vendure.io/reference/typescript-api/custom-fields/struct-custom-field-config): StructCustomFieldConfig\n- [StructFieldConfig](https://docs.vendure.io/reference/typescript-api/custom-fields/struct-field-config): StructFieldConfig\n- [TypedCustomSingleFieldConfig](https://docs.vendure.io/reference/typescript-api/custom-fields/typed-custom-single-field-config): TypedCustomSingleFieldConfig\n- [Calculated](https://docs.vendure.io/reference/typescript-api/data-access/calculated): Calculated\n- [CalculatedPropertySubscriber](https://docs.vendure.io/reference/typescript-api/data-access/calculated-property-subscriber): CalculatedPropertySubscriber\n- [EntityHydrator](https://docs.vendure.io/reference/typescript-api/data-access/entity-hydrator): EntityHydrator\n- [GetEntityOrThrowOptions](https://docs.vendure.io/reference/typescript-api/data-access/get-entity-or-throw-options): GetEntityOrThrowOptions\n- [HydrateOptions](https://docs.vendure.io/reference/typescript-api/data-access/hydrate-options): HydrateOptions\n- [Data Access](https://docs.vendure.io/reference/typescript-api/data-access): \n- [ListQueryBuilder](https://docs.vendure.io/reference/typescript-api/data-access/list-query-builder): ListQueryBuilder\n- [TransactionalConnection](https://docs.vendure.io/reference/typescript-api/data-access/transactional-connection): TransactionalConnection\n- [DefaultSearchPluginInitOptions](https://docs.vendure.io/reference/typescript-api/default-search-plugin/default-search-plugin-init-options): DefaultSearchPluginInitOptions\n- [DefaultSearchPlugin](https://docs.vendure.io/reference/typescript-api/default-search-plugin): DefaultSearchPlugin\n- [MysqlSearchStrategy](https://docs.vendure.io/reference/typescript-api/default-search-plugin/mysql-search-strategy): MysqlSearchStrategy\n- [PostgresSearchStrategy](https://docs.vendure.io/reference/typescript-api/default-search-plugin/postgres-search-strategy): PostgresSearchStrategy\n- [SearchStrategy](https://docs.vendure.io/reference/typescript-api/default-search-plugin/search-strategy): SearchStrategy\n- [SqliteSearchStrategy](https://docs.vendure.io/reference/typescript-api/default-search-plugin/sqlite-search-strategy): SqliteSearchStrategy\n- [Address](https://docs.vendure.io/reference/typescript-api/entities/address): Address\n- [Administrator](https://docs.vendure.io/reference/typescript-api/entities/administrator): Administrator\n- [AnonymousSession](https://docs.vendure.io/reference/typescript-api/entities/anonymous-session): AnonymousSession\n- [Asset](https://docs.vendure.io/reference/typescript-api/entities/asset): Asset\n- [AuthenticatedSession](https://docs.vendure.io/reference/typescript-api/entities/authenticated-session): AuthenticatedSession\n- [AuthenticationMethod](https://docs.vendure.io/reference/typescript-api/entities/authentication-method): AuthenticationMethod\n- [Channel](https://docs.vendure.io/reference/typescript-api/entities/channel): Channel\n- [Collection](https://docs.vendure.io/reference/typescript-api/entities/collection): Collection\n- [Country](https://docs.vendure.io/reference/typescript-api/entities/country): Country\n- [Customer](https://docs.vendure.io/reference/typescript-api/entities/customer): Customer\n- [CustomerGroup](https://docs.vendure.io/reference/typescript-api/entities/customer-group): CustomerGroup\n- [CustomerHistoryEntry](https://docs.vendure.io/reference/typescript-api/entities/customer-history-entry): CustomerHistoryEntry\n- [Facet](https://docs.vendure.io/reference/typescript-api/entities/facet): Facet\n- [FacetValue](https://docs.vendure.io/reference/typescript-api/entities/facet-value): FacetValue\n- [Fulfillment](https://docs.vendure.io/reference/typescript-api/entities/fulfillment): Fulfillment\n- [GlobalSettings](https://docs.vendure.io/reference/typescript-api/entities/global-settings): GlobalSettings\n- [HistoryEntry](https://docs.vendure.io/reference/typescript-api/entities/history-entry): HistoryEntry\n- [Entities](https://docs.vendure.io/reference/typescript-api/entities): \n- [Interfaces](https://docs.vendure.io/reference/typescript-api/entities/interfaces): ChannelAware\n- [Order](https://docs.vendure.io/reference/typescript-api/entities/order): Order\n- [OrderHistoryEntry](https://docs.vendure.io/reference/typescript-api/entities/order-history-entry): OrderHistoryEntry\n- [OrderLine](https://docs.vendure.io/reference/typescript-api/entities/order-line): OrderLine\n- [OrderLineReference](https://docs.vendure.io/reference/typescript-api/entities/order-line-reference): FulfillmentLine\n- [OrderModification](https://docs.vendure.io/reference/typescript-api/entities/order-modification): OrderModification\n- [OrderableAsset](https://docs.vendure.io/reference/typescript-api/entities/orderable-asset): OrderableAsset\n- [Payment](https://docs.vendure.io/reference/typescript-api/entities/payment): Payment\n- [PaymentMethod](https://docs.vendure.io/reference/typescript-api/entities/payment-method): PaymentMethod\n- [Product](https://docs.vendure.io/reference/typescript-api/entities/product): Product\n- [ProductOption](https://docs.vendure.io/reference/typescript-api/entities/product-option): ProductOption\n- [ProductOptionGroup](https://docs.vendure.io/reference/typescript-api/entities/product-option-group): ProductOptionGroup\n- [ProductVariant](https://docs.vendure.io/reference/typescript-api/entities/product-variant): ProductVariant\n- [ProductVariantPrice](https://docs.vendure.io/reference/typescript-api/entities/product-variant-price): ProductVariantPrice\n- [Promotion](https://docs.vendure.io/reference/typescript-api/entities/promotion): Promotion\n- [Province](https://docs.vendure.io/reference/typescript-api/entities/province): Province\n- [Refund](https://docs.vendure.io/reference/typescript-api/entities/refund): Refund\n- [Region](https://docs.vendure.io/reference/typescript-api/entities/region): Region\n- [Role](https://docs.vendure.io/reference/typescript-api/entities/role): Role\n- [Seller](https://docs.vendure.io/reference/typescript-api/entities/seller): Seller\n- [Session](https://docs.vendure.io/reference/typescript-api/entities/session): Session\n- [SettingsStoreEntry](https://docs.vendure.io/reference/typescript-api/entities/settings-store-entry): SettingsStoreEntry\n- [ShippingLine](https://docs.vendure.io/reference/typescript-api/entities/shipping-line): ShippingLine\n- [ShippingMethod](https://docs.vendure.io/reference/typescript-api/entities/shipping-method): ShippingMethod\n- [StockLevel](https://docs.vendure.io/reference/typescript-api/entities/stock-level): StockLevel\n- [StockLocation](https://docs.vendure.io/reference/typescript-api/entities/stock-location): StockLocation\n- [StockMovement](https://docs.vendure.io/reference/typescript-api/entities/stock-movement): StockMovement\n- [Surcharge](https://docs.vendure.io/reference/typescript-api/entities/surcharge): Surcharge\n- [Tag](https://docs.vendure.io/reference/typescript-api/entities/tag): Tag\n- [TaxCategory](https://docs.vendure.io/reference/typescript-api/entities/tax-category): TaxCategory\n- [TaxRate](https://docs.vendure.io/reference/typescript-api/entities/tax-rate): TaxRate\n- [User](https://docs.vendure.io/reference/typescript-api/entities/user): User\n- [VendureEntity](https://docs.vendure.io/reference/typescript-api/entities/vendure-entity): VendureEntity\n- [Zone](https://docs.vendure.io/reference/typescript-api/entities/zone): Zone\n- [ErrorHandlerStrategy](https://docs.vendure.io/reference/typescript-api/errors/error-handler-strategy): ErrorHandlerStrategy\n- [ErrorResultUnion](https://docs.vendure.io/reference/typescript-api/errors/error-result-union): ErrorResultUnion\n- [Error Types](https://docs.vendure.io/reference/typescript-api/errors/error-types): InternalServerError\n- [I18nError](https://docs.vendure.io/reference/typescript-api/errors/i18n-error): I18nError\n- [Errors](https://docs.vendure.io/reference/typescript-api/errors): \n- [IsGraphQlErrorResult](https://docs.vendure.io/reference/typescript-api/errors/is-graph-ql-error-result): isGraphQlErrorResult\n- [BlockingEventHandlerOptions](https://docs.vendure.io/reference/typescript-api/events/blocking-event-handler-options): BlockingEventHandlerOptions\n- [EventBus](https://docs.vendure.io/reference/typescript-api/events/event-bus): EventBus\n- [Event Types](https://docs.vendure.io/reference/typescript-api/events/event-types): AccountRegistrationEvent\n- [Events](https://docs.vendure.io/reference/typescript-api/events): \n- [VendureEntityEvent](https://docs.vendure.io/reference/typescript-api/events/vendure-entity-event): VendureEntityEvent\n- [VendureEvent](https://docs.vendure.io/reference/typescript-api/events/vendure-event): VendureEvent\n- [FulfillmentHandler](https://docs.vendure.io/reference/typescript-api/fulfillment/fulfillment-handler): FulfillmentHandler\n- [FulfillmentProcess](https://docs.vendure.io/reference/typescript-api/fulfillment/fulfillment-process): defaultFulfillmentProcess\n- [FulfillmentState](https://docs.vendure.io/reference/typescript-api/fulfillment/fulfillment-state): FulfillmentState\n- [FulfillmentStates](https://docs.vendure.io/reference/typescript-api/fulfillment/fulfillment-states): FulfillmentStates\n- [FulfillmentTransitionData](https://docs.vendure.io/reference/typescript-api/fulfillment/fulfillment-transition-data): FulfillmentTransitionData\n- [Fulfillment](https://docs.vendure.io/reference/typescript-api/fulfillment): \n- [HealthCheckRegistryService](https://docs.vendure.io/reference/typescript-api/health-check/health-check-registry-service): HealthCheckRegistryService\n- [HealthCheckStrategy](https://docs.vendure.io/reference/typescript-api/health-check/health-check-strategy): HealthCheckStrategy\n- [HttpHealthCheckStrategy](https://docs.vendure.io/reference/typescript-api/health-check/http-health-check-strategy): HttpHealthCheckStrategy\n- [Health Check](https://docs.vendure.io/reference/typescript-api/health-check): \n- [TypeORMHealthCheckStrategy](https://docs.vendure.io/reference/typescript-api/health-check/type-ormhealth-check-strategy): TypeORMHealthCheckStrategy\n- [AssetImportStrategy](https://docs.vendure.io/reference/typescript-api/import-export/asset-import-strategy): AssetImportStrategy\n- [AssetImporter](https://docs.vendure.io/reference/typescript-api/import-export/asset-importer): AssetImporter\n- [DefaultAssetImportStrategy](https://docs.vendure.io/reference/typescript-api/import-export/default-asset-import-strategy): DefaultAssetImportStrategy\n- [FastImporterService](https://docs.vendure.io/reference/typescript-api/import-export/fast-importer-service): FastImporterService\n- [ImportExportOptions](https://docs.vendure.io/reference/typescript-api/import-export/import-export-options): ImportExportOptions\n- [ImportParser](https://docs.vendure.io/reference/typescript-api/import-export/import-parser): ImportParser\n- [Importer](https://docs.vendure.io/reference/typescript-api/import-export/importer): Importer\n- [Import Export](https://docs.vendure.io/reference/typescript-api/import-export): \n- [InitialData](https://docs.vendure.io/reference/typescript-api/import-export/initial-data): InitialData\n- [Populate](https://docs.vendure.io/reference/typescript-api/import-export/populate): populate\n- [Populator](https://docs.vendure.io/reference/typescript-api/import-export/populator): Populator\n- [DefaultJobQueuePlugin](https://docs.vendure.io/reference/typescript-api/job-queue/default-job-queue-plugin): DefaultJobQueuePlugin\n- [InMemoryJobBufferStorageStrategy](https://docs.vendure.io/reference/typescript-api/job-queue/in-memory-job-buffer-storage-strategy): InMemoryJobBufferStorageStrategy\n- [InMemoryJobQueueStrategy](https://docs.vendure.io/reference/typescript-api/job-queue/in-memory-job-queue-strategy): InMemoryJobQueueStrategy\n- [JobQueue](https://docs.vendure.io/reference/typescript-api/job-queue): JobQueue\n- [InspectableJobQueueStrategy](https://docs.vendure.io/reference/typescript-api/job-queue/inspectable-job-queue-strategy): InspectableJobQueueStrategy\n- [Job](https://docs.vendure.io/reference/typescript-api/job-queue/job): Job\n- [JobBuffer](https://docs.vendure.io/reference/typescript-api/job-queue/job-buffer): JobBuffer\n- [JobBufferStorageStrategy](https://docs.vendure.io/reference/typescript-api/job-queue/job-buffer-storage-strategy): JobBufferStorageStrategy\n- [JobQueueOptions](https://docs.vendure.io/reference/typescript-api/job-queue/job-queue-options): JobQueueOptions\n- [JobQueueService](https://docs.vendure.io/reference/typescript-api/job-queue/job-queue-service): JobQueueService\n- [JobQueueStrategy](https://docs.vendure.io/reference/typescript-api/job-queue/job-queue-strategy): JobQueueStrategy\n- [PollingJobQueueStrategy](https://docs.vendure.io/reference/typescript-api/job-queue/polling-job-queue-strategy): PollingJobQueueStrategy\n- [SqlJobQueueStrategy](https://docs.vendure.io/reference/typescript-api/job-queue/sql-job-queue-strategy): SqlJobQueueStrategy\n- [SubscribableJob](https://docs.vendure.io/reference/typescript-api/job-queue/subscribable-job): SubscribableJob\n- [Types](https://docs.vendure.io/reference/typescript-api/job-queue/types): BackoffStrategy\n- [DefaultLogger](https://docs.vendure.io/reference/typescript-api/logger/default-logger): DefaultLogger\n- [Logger](https://docs.vendure.io/reference/typescript-api/logger): Logger\n- [LogLevel](https://docs.vendure.io/reference/typescript-api/logger/log-level): LogLevel\n- [VendureLogger](https://docs.vendure.io/reference/typescript-api/logger/vendure-logger): VendureLogger\n- [GenerateMigration](https://docs.vendure.io/reference/typescript-api/migration/generate-migration): generateMigration\n- [Migration](https://docs.vendure.io/reference/typescript-api/migration): \n- [MigrationOptions](https://docs.vendure.io/reference/typescript-api/migration/migration-options): MigrationOptions\n- [RevertLastMigration](https://docs.vendure.io/reference/typescript-api/migration/revert-last-migration): revertLastMigration\n- [RunMigrations](https://docs.vendure.io/reference/typescript-api/migration/run-migrations): runMigrations\n- [BigIntMoneyStrategy](https://docs.vendure.io/reference/typescript-api/money/big-int-money-strategy): BigIntMoneyStrategy\n- [DefaultMoneyStrategy](https://docs.vendure.io/reference/typescript-api/money/default-money-strategy): DefaultMoneyStrategy\n- [Money](https://docs.vendure.io/reference/typescript-api/money): \n- [Money Decorator](https://docs.vendure.io/reference/typescript-api/money/money-decorator): Money\n- [MoneyStrategy](https://docs.vendure.io/reference/typescript-api/money/money-strategy): MoneyStrategy\n- [RoundMoney](https://docs.vendure.io/reference/typescript-api/money/round-money): roundMoney\n- [ActiveOrderService](https://docs.vendure.io/reference/typescript-api/orders/active-order-service): ActiveOrderService\n- [ActiveOrderStrategy](https://docs.vendure.io/reference/typescript-api/orders/active-order-strategy): ActiveOrderStrategy\n- [ChangedPriceHandlingStrategy](https://docs.vendure.io/reference/typescript-api/orders/changed-price-handling-strategy): ChangedPriceHandlingStrategy\n- [CustomOrderStates](https://docs.vendure.io/reference/typescript-api/orders/custom-order-states): CustomOrderStates\n- [DefaultActiveOrderStrategy](https://docs.vendure.io/reference/typescript-api/orders/default-active-order-strategy): DefaultActiveOrderStrategy\n- [DefaultGuestCheckoutStrategy](https://docs.vendure.io/reference/typescript-api/orders/default-guest-checkout-strategy): DefaultGuestCheckoutStrategy\n- [DefaultOrderItemPriceCalculationStrategy](https://docs.vendure.io/reference/typescript-api/orders/default-order-item-price-calculation-strategy): DefaultOrderItemPriceCalculationStrategy\n- [DefaultOrderPlacedStrategy](https://docs.vendure.io/reference/typescript-api/orders/default-order-placed-strategy): DefaultOrderPlacedStrategy\n- [DefaultStockAllocationStrategy](https://docs.vendure.io/reference/typescript-api/orders/default-stock-allocation-strategy): DefaultStockAllocationStrategy\n- [GuestCheckoutStrategy](https://docs.vendure.io/reference/typescript-api/orders/guest-checkout-strategy): GuestCheckoutStrategy\n- [Orders](https://docs.vendure.io/reference/typescript-api/orders): \n- [Merge Strategies](https://docs.vendure.io/reference/typescript-api/orders/merge-strategies): MergeOrdersStrategy\n- [OrderByCodeAccessStrategy](https://docs.vendure.io/reference/typescript-api/orders/order-by-code-access-strategy): OrderByCodeAccessStrategy\n- [OrderCodeStrategy](https://docs.vendure.io/reference/typescript-api/orders/order-code-strategy): OrderCodeStrategy\n- [OrderInterceptor](https://docs.vendure.io/reference/typescript-api/orders/order-interceptor): OrderInterceptor\n- [OrderItemPriceCalculationStrategy](https://docs.vendure.io/reference/typescript-api/orders/order-item-price-calculation-strategy): OrderItemPriceCalculationStrategy\n- [OrderMergeStrategy](https://docs.vendure.io/reference/typescript-api/orders/order-merge-strategy): OrderMergeStrategy\n- [OrderOptions](https://docs.vendure.io/reference/typescript-api/orders/order-options): OrderOptions\n- [OrderPlacedStrategy](https://docs.vendure.io/reference/typescript-api/orders/order-placed-strategy): OrderPlacedStrategy\n- [OrderProcess](https://docs.vendure.io/reference/typescript-api/orders/order-process): OrderProcess\n- [OrderSellerStrategy](https://docs.vendure.io/reference/typescript-api/orders/order-seller-strategy): OrderSellerStrategy\n- [StockAllocationStrategy](https://docs.vendure.io/reference/typescript-api/orders/stock-allocation-strategy): StockAllocationStrategy\n- [DefaultPaymentProcess](https://docs.vendure.io/reference/typescript-api/payment/default-payment-process): defaultPaymentProcess\n- [DefaultRefundProcess](https://docs.vendure.io/reference/typescript-api/payment/default-refund-process): defaultRefundProcess\n- [DummyPaymentHandler](https://docs.vendure.io/reference/typescript-api/payment/dummy-payment-handler): dummyPaymentHandler\n- [Payment](https://docs.vendure.io/reference/typescript-api/payment): \n- [PaymentMethodConfigOptions](https://docs.vendure.io/reference/typescript-api/payment/payment-method-config-options): PaymentMethodConfigOptions\n- [PaymentMethodEligibilityChecker](https://docs.vendure.io/reference/typescript-api/payment/payment-method-eligibility-checker): PaymentMethodEligibilityChecker\n- [PaymentMethodHandler](https://docs.vendure.io/reference/typescript-api/payment/payment-method-handler): PaymentMethodHandler\n- [Payment Method Types](https://docs.vendure.io/reference/typescript-api/payment/payment-method-types): CreatePaymentResult\n- [PaymentOptions](https://docs.vendure.io/reference/typescript-api/payment/payment-options): PaymentOptions\n- [PaymentProcess](https://docs.vendure.io/reference/typescript-api/payment/payment-process): PaymentProcess\n- [PaymentState](https://docs.vendure.io/reference/typescript-api/payment/payment-state): PaymentState\n- [PaymentStates](https://docs.vendure.io/reference/typescript-api/payment/payment-states): PaymentStates\n- [PaymentTransitionData](https://docs.vendure.io/reference/typescript-api/payment/payment-transition-data): PaymentTransitionData\n- [RefundProcess](https://docs.vendure.io/reference/typescript-api/payment/refund-process): RefundProcess\n- [RefundState](https://docs.vendure.io/reference/typescript-api/payment/refund-state): RefundState\n- [RefundStates](https://docs.vendure.io/reference/typescript-api/payment/refund-states): RefundStates\n- [RefundTransitionData](https://docs.vendure.io/reference/typescript-api/payment/refund-transition-data): RefundTransitionData\n- [Plugin](https://docs.vendure.io/reference/typescript-api/plugin): \n- [PluginCommonModule](https://docs.vendure.io/reference/typescript-api/plugin/plugin-common-module): PluginCommonModule\n- [Plugin Utilities](https://docs.vendure.io/reference/typescript-api/plugin/plugin-utilities): createProxyHandler\n- [VendurePlugin](https://docs.vendure.io/reference/typescript-api/plugin/vendure-plugin): VendurePlugin\n- [VendurePluginMetadata](https://docs.vendure.io/reference/typescript-api/plugin/vendure-plugin-metadata): VendurePluginMetadata\n- [CatalogOptions](https://docs.vendure.io/reference/typescript-api/products-stock/catalog-options): CatalogOptions\n- [DefaultProductVariantPriceCalculationStrategy](https://docs.vendure.io/reference/typescript-api/products-stock/default-product-variant-price-calculation-strategy): DefaultProductVariantPriceCalculationStrategy\n- [DefaultStockDisplayStrategy](https://docs.vendure.io/reference/typescript-api/products-stock/default-stock-display-strategy): DefaultStockDisplayStrategy\n- [DefaultStockLocationStrategy](https://docs.vendure.io/reference/typescript-api/products-stock/default-stock-location-strategy): DefaultStockLocationStrategy\n- [Products Stock](https://docs.vendure.io/reference/typescript-api/products-stock): \n- [MultiChannelStockLocationStrategy](https://docs.vendure.io/reference/typescript-api/products-stock/multi-channel-stock-location-strategy): MultiChannelStockLocationStrategy\n- [ProductVariantPriceCalculationStrategy](https://docs.vendure.io/reference/typescript-api/products-stock/product-variant-price-calculation-strategy): ProductVariantPriceCalculationStrategy\n- [StockDisplayStrategy](https://docs.vendure.io/reference/typescript-api/products-stock/stock-display-strategy): StockDisplayStrategy\n- [StockLocationStrategy](https://docs.vendure.io/reference/typescript-api/products-stock/stock-location-strategy): StockLocationStrategy\n- [FacetValueChecker](https://docs.vendure.io/reference/typescript-api/promotions/facet-value-checker): FacetValueChecker\n- [Promotions](https://docs.vendure.io/reference/typescript-api/promotions): \n- [Promotion Action](https://docs.vendure.io/reference/typescript-api/promotions/promotion-action): PromotionAction\n- [Promotion Condition](https://docs.vendure.io/reference/typescript-api/promotions/promotion-condition): PromotionCondition\n- [PromotionOptions](https://docs.vendure.io/reference/typescript-api/promotions/promotion-options): PromotionOptions\n- [Allow Decorator](https://docs.vendure.io/reference/typescript-api/request/allow-decorator): Allow\n- [Api Decorator](https://docs.vendure.io/reference/typescript-api/request/api-decorator): Api\n- [ApiType](https://docs.vendure.io/reference/typescript-api/request/api-type): ApiType\n- [Ctx Decorator](https://docs.vendure.io/reference/typescript-api/request/ctx-decorator): Ctx\n- [Request](https://docs.vendure.io/reference/typescript-api/request): \n- [Relations Decorator](https://docs.vendure.io/reference/typescript-api/request/relations-decorator): Relations\n- [RequestContext](https://docs.vendure.io/reference/typescript-api/request/request-context): RequestContext\n- [RequestContextService](https://docs.vendure.io/reference/typescript-api/request/request-context-service): RequestContextService\n- [Transaction Decorator](https://docs.vendure.io/reference/typescript-api/request/transaction-decorator): Transaction\n- [CleanSessionsTask](https://docs.vendure.io/reference/typescript-api/scheduled-tasks/clean-sessions-task): cleanSessionsTask\n- [DefaultSchedulerPlugin](https://docs.vendure.io/reference/typescript-api/scheduled-tasks/default-scheduler-plugin): DefaultSchedulerPlugin\n- [DefaultSchedulerStrategy](https://docs.vendure.io/reference/typescript-api/scheduled-tasks/default-scheduler-strategy): DefaultSchedulerStrategy\n- [Scheduled Tasks](https://docs.vendure.io/reference/typescript-api/scheduled-tasks): \n- [ScheduledTask](https://docs.vendure.io/reference/typescript-api/scheduled-tasks/scheduled-task): ScheduledTask\n- [SchedulerOptions](https://docs.vendure.io/reference/typescript-api/scheduled-tasks/scheduler-options): SchedulerOptions\n- [SchedulerService](https://docs.vendure.io/reference/typescript-api/scheduled-tasks/scheduler-service): SchedulerService\n- [SchedulerStrategy](https://docs.vendure.io/reference/typescript-api/scheduled-tasks/scheduler-strategy): SchedulerStrategy\n- [EntityDuplicatorService](https://docs.vendure.io/reference/typescript-api/service-helpers/entity-duplicator-service): EntityDuplicatorService\n- [Service Helpers](https://docs.vendure.io/reference/typescript-api/service-helpers): \n- [OrderCalculator](https://docs.vendure.io/reference/typescript-api/service-helpers/order-calculator): OrderCalculator\n- [OrderModifier](https://docs.vendure.io/reference/typescript-api/service-helpers/order-modifier): OrderModifier\n- [ProductPriceApplicator](https://docs.vendure.io/reference/typescript-api/service-helpers/product-price-applicator): ProductPriceApplicator\n- [SlugValidator](https://docs.vendure.io/reference/typescript-api/service-helpers/slug-validator): SlugValidator\n- [TranslatableSaver](https://docs.vendure.io/reference/typescript-api/service-helpers/translatable-saver): TranslatableSaver\n- [TranslatorService](https://docs.vendure.io/reference/typescript-api/service-helpers/translator-service): TranslatorService\n- [AdministratorService](https://docs.vendure.io/reference/typescript-api/services/administrator-service): AdministratorService\n- [AssetService](https://docs.vendure.io/reference/typescript-api/services/asset-service): AssetService\n- [AuthService](https://docs.vendure.io/reference/typescript-api/services/auth-service): AuthService\n- [ChannelService](https://docs.vendure.io/reference/typescript-api/services/channel-service): ChannelService\n- [CollectionService](https://docs.vendure.io/reference/typescript-api/services/collection-service): CollectionService\n- [CountryService](https://docs.vendure.io/reference/typescript-api/services/country-service): CountryService\n- [CustomerGroupService](https://docs.vendure.io/reference/typescript-api/services/customer-group-service): CustomerGroupService\n- [CustomerService](https://docs.vendure.io/reference/typescript-api/services/customer-service): CustomerService\n- [FacetService](https://docs.vendure.io/reference/typescript-api/services/facet-service): FacetService\n- [FacetValueService](https://docs.vendure.io/reference/typescript-api/services/facet-value-service): FacetValueService\n- [FulfillmentService](https://docs.vendure.io/reference/typescript-api/services/fulfillment-service): FulfillmentService\n- [GlobalSettingsService](https://docs.vendure.io/reference/typescript-api/services/global-settings-service): GlobalSettingsService\n- [HistoryService](https://docs.vendure.io/reference/typescript-api/services/history-service): HistoryService\n- [Services](https://docs.vendure.io/reference/typescript-api/services): \n- [InitializerService](https://docs.vendure.io/reference/typescript-api/services/initializer-service): InitializerService\n- [OrderService](https://docs.vendure.io/reference/typescript-api/services/order-service): OrderService\n- [OrderTestingService](https://docs.vendure.io/reference/typescript-api/services/order-testing-service): OrderTestingService\n- [PaymentMethodService](https://docs.vendure.io/reference/typescript-api/services/payment-method-service): PaymentMethodService\n- [PaymentService](https://docs.vendure.io/reference/typescript-api/services/payment-service): PaymentService\n- [ProductOptionGroupService](https://docs.vendure.io/reference/typescript-api/services/product-option-group-service): ProductOptionGroupService\n- [ProductOptionService](https://docs.vendure.io/reference/typescript-api/services/product-option-service): ProductOptionService\n- [ProductService](https://docs.vendure.io/reference/typescript-api/services/product-service): ProductService\n- [ProductVariantService](https://docs.vendure.io/reference/typescript-api/services/product-variant-service): ProductVariantService\n- [PromotionService](https://docs.vendure.io/reference/typescript-api/services/promotion-service): PromotionService\n- [ProvinceService](https://docs.vendure.io/reference/typescript-api/services/province-service): ProvinceService\n- [RoleService](https://docs.vendure.io/reference/typescript-api/services/role-service): RoleService\n- [SearchService](https://docs.vendure.io/reference/typescript-api/services/search-service): SearchService\n- [SellerService](https://docs.vendure.io/reference/typescript-api/services/seller-service): SellerService\n- [SessionService](https://docs.vendure.io/reference/typescript-api/services/session-service): SessionService\n- [SettingsStoreService](https://docs.vendure.io/reference/typescript-api/services/settings-store-service): SettingsStoreService\n- [ShippingMethodService](https://docs.vendure.io/reference/typescript-api/services/shipping-method-service): ShippingMethodService\n- [StockLevelService](https://docs.vendure.io/reference/typescript-api/services/stock-level-service): StockLevelService\n- [StockMovementService](https://docs.vendure.io/reference/typescript-api/services/stock-movement-service): StockMovementService\n- [TagService](https://docs.vendure.io/reference/typescript-api/services/tag-service): TagService\n- [TaxCategoryService](https://docs.vendure.io/reference/typescript-api/services/tax-category-service): TaxCategoryService\n- [TaxRateService](https://docs.vendure.io/reference/typescript-api/services/tax-rate-service): TaxRateService\n- [UserService](https://docs.vendure.io/reference/typescript-api/services/user-service): UserService\n- [ZoneService](https://docs.vendure.io/reference/typescript-api/services/zone-service): ZoneService\n- [CleanupOrphanedSettingsStoreEntriesOptions](https://docs.vendure.io/reference/typescript-api/settings-store/cleanup-orphaned-settings-store-entries-options): CleanupOrphanedSettingsStoreEntriesOptions\n- [CleanupOrphanedSettingsStoreEntriesResult](https://docs.vendure.io/reference/typescript-api/settings-store/cleanup-orphaned-settings-store-entries-result): CleanupOrphanedSettingsStoreEntriesResult\n- [SettingsStore](https://docs.vendure.io/reference/typescript-api/settings-store): cleanOrphanedSettingsStoreTask\n- [OrphanedSettingsStoreEntry](https://docs.vendure.io/reference/typescript-api/settings-store/orphaned-settings-store-entry): OrphanedSettingsStoreEntry\n- [SetSettingsStoreValueResult](https://docs.vendure.io/reference/typescript-api/settings-store/set-settings-store-value-result): SetSettingsStoreValueResult\n- [SettingsStoreFieldConfig](https://docs.vendure.io/reference/typescript-api/settings-store/settings-store-field-config): SettingsStoreFieldConfig\n- [SettingsStoreRegistration](https://docs.vendure.io/reference/typescript-api/settings-store/settings-store-registration): SettingsStoreRegistration\n- [SettingsStoreScopeFunction](https://docs.vendure.io/reference/typescript-api/settings-store/settings-store-scope-function): SettingsStoreScopeFunction\n- [SettingsStoreScopes](https://docs.vendure.io/reference/typescript-api/settings-store/settings-store-scopes): SettingsStoreScopes\n- [CheckShippingEligibilityCheckerFn](https://docs.vendure.io/reference/typescript-api/shipping/check-shipping-eligibility-checker-fn): CheckShippingEligibilityCheckerFn\n- [DefaultShippingLineAssignmentStrategy](https://docs.vendure.io/reference/typescript-api/shipping/default-shipping-line-assignment-strategy): DefaultShippingLineAssignmentStrategy\n- [Shipping](https://docs.vendure.io/reference/typescript-api/shipping): \n- [ShippingCalculator](https://docs.vendure.io/reference/typescript-api/shipping/shipping-calculator): ShippingCalculator\n- [ShippingEligibilityChecker](https://docs.vendure.io/reference/typescript-api/shipping/shipping-eligibility-checker): ShippingEligibilityChecker\n- [ShippingEligibilityCheckerConfig](https://docs.vendure.io/reference/typescript-api/shipping/shipping-eligibility-checker-config): ShippingEligibilityCheckerConfig\n- [ShippingLineAssignmentStrategy](https://docs.vendure.io/reference/typescript-api/shipping/shipping-line-assignment-strategy): ShippingLineAssignmentStrategy\n- [ShippingOptions](https://docs.vendure.io/reference/typescript-api/shipping/shipping-options): ShippingOptions\n- [ShouldRunCheckFn](https://docs.vendure.io/reference/typescript-api/shipping/should-run-check-fn): ShouldRunCheckFn\n- [FSM](https://docs.vendure.io/reference/typescript-api/state-machine/fsm): FSM\n- [State Machine](https://docs.vendure.io/reference/typescript-api/state-machine): \n- [StateMachineConfig](https://docs.vendure.io/reference/typescript-api/state-machine/state-machine-config): StateMachineConfig\n- [Transitions](https://docs.vendure.io/reference/typescript-api/state-machine/transitions): Transitions\n- [AddressBasedTaxZoneStrategy](https://docs.vendure.io/reference/typescript-api/tax/address-based-tax-zone-strategy): AddressBasedTaxZoneStrategy\n- [DefaultTaxLineCalculationStrategy](https://docs.vendure.io/reference/typescript-api/tax/default-tax-line-calculation-strategy): DefaultTaxLineCalculationStrategy\n- [DefaultTaxZoneStrategy](https://docs.vendure.io/reference/typescript-api/tax/default-tax-zone-strategy): DefaultTaxZoneStrategy\n- [Tax](https://docs.vendure.io/reference/typescript-api/tax): \n- [TaxLineCalculationStrategy](https://docs.vendure.io/reference/typescript-api/tax/tax-line-calculation-strategy): TaxLineCalculationStrategy\n- [TaxOptions](https://docs.vendure.io/reference/typescript-api/tax/tax-options): TaxOptions\n- [TaxZoneStrategy](https://docs.vendure.io/reference/typescript-api/tax/tax-zone-strategy): TaxZoneStrategy\n- [Telemetry](https://docs.vendure.io/reference/typescript-api/telemetry): \n- [Instrument](https://docs.vendure.io/reference/typescript-api/telemetry/instrument): Instrument\n- [InstrumentationStrategy](https://docs.vendure.io/reference/typescript-api/telemetry/instrumentation-strategy): InstrumentationStrategy\n- [WrappedMethodArgs](https://docs.vendure.io/reference/typescript-api/telemetry/wrapped-method-args): WrappedMethodArgs\n- [CreateErrorResultGuard](https://docs.vendure.io/reference/typescript-api/testing/create-error-result-guard): createErrorResultGuard\n- [CreateTestEnvironment](https://docs.vendure.io/reference/typescript-api/testing/create-test-environment): createTestEnvironment\n- [ErrorResultGuard](https://docs.vendure.io/reference/typescript-api/testing/error-result-guard): ErrorResultGuard\n- [GetSuperadminContext](https://docs.vendure.io/reference/typescript-api/testing/get-superadmin-context): getSuperadminContext\n- [Testing](https://docs.vendure.io/reference/typescript-api/testing): \n- [RegisterInitializer](https://docs.vendure.io/reference/typescript-api/testing/register-initializer): registerInitializer\n- [SimpleGraphQLClient](https://docs.vendure.io/reference/typescript-api/testing/simple-graph-qlclient): SimpleGraphQLClient\n- [TestConfig](https://docs.vendure.io/reference/typescript-api/testing/test-config): testConfig\n- [TestDbInitializer](https://docs.vendure.io/reference/typescript-api/testing/test-db-initializer): TestDbInitializer\n- [TestEnvironment](https://docs.vendure.io/reference/typescript-api/testing/test-environment): TestEnvironment\n- [TestServer](https://docs.vendure.io/reference/typescript-api/testing/test-server): TestServer\n- [TestServerOptions](https://docs.vendure.io/reference/typescript-api/testing/test-server-options): TestServerOptions\n- [TestingLogger](https://docs.vendure.io/reference/typescript-api/testing/testing-logger): TestingLogger\n- [BootstrapWorker](https://docs.vendure.io/reference/typescript-api/worker/bootstrap-worker): bootstrapWorker\n- [Worker](https://docs.vendure.io/reference/typescript-api/worker): \n- [VendureWorker](https://docs.vendure.io/reference/typescript-api/worker/vendure-worker): VendureWorker\n- [WorkerHealthCheckConfig](https://docs.vendure.io/reference/typescript-api/worker/worker-health-check-config): WorkerHealthCheckConfig\n- [Collections](https://docs.vendure.io/user-guide/catalog/collections): Collections allow you to group ProductVariants together by various criteria. A typical use of Collections is to create a hierarchical category tree which can be used in a navigation menu in your storefront.\n- [Facets](https://docs.vendure.io/user-guide/catalog/facets): Facets are the primary means to attach structured data to your Products & ProductVariants. Typical uses of Facets include:\n- [Products](https://docs.vendure.io/user-guide/catalog/products): Products represent the items you want to sell to your customers.\n- [Customers](https://docs.vendure.io/user-guide/customers): A Customer is anybody who has:\n- [Vendure User Guide](https://docs.vendure.io/user-guide): This section is for store owners and staff who are charged with running a Vendure-based store.\n- [Localization](https://docs.vendure.io/user-guide/localization): Vendure supports customer-facing (Shop API) localization by allowing you to define translations for the following objects:\n- [Draft Orders](https://docs.vendure.io/user-guide/orders/draft-orders): Draft Orders are used when an Administrator would like to manually create an order via the Admin UI. For example, this can be useful when:\n- [Orders](https://docs.vendure.io/user-guide/orders/orders): An Order is created whenever someone adds an item to their cart in the storefront. In Vendure, there is no distinction between a \"cart\" and an \"order\". Thus a \"cart\" is just an Order which has not yet passed through the checkout process.\n- [Promotions](https://docs.vendure.io/user-guide/promotions): Promotions are a means of offering discounts on an order based on various criteria. A Promotion consists of conditions and actions.\n- [Administrators & Roles](https://docs.vendure.io/user-guide/settings/administrators-roles): An administrator is a staff member who has access to the Admin UI, and is able to view and modify some or all of the items and settings.\n- [Channels](https://docs.vendure.io/user-guide/settings/channels): Channels allow you to split your store into multiple sub-stores, each of which can have its own selection of inventory, customers, orders, shipping methods etc.\n- [Countries & Zones](https://docs.vendure.io/user-guide/settings/countries-zones): Countries are where you define the list of countries which are relevant to your operations. This does not only include those countries you ship to, but also those countries which may appear on a billing address.\n- [Global Settings](https://docs.vendure.io/user-guide/settings/global-settings): The global settings allow you to define certain configurations that affect all channels.\n- [Payment Methods](https://docs.vendure.io/user-guide/settings/payment-methods): Payment methods define how your storefront handles payments. Your storefront may offer multiple payment methods or just one.\n- [Shipping Methods](https://docs.vendure.io/user-guide/settings/shipping-methods): Shipping methods define:\n- [Taxes](https://docs.vendure.io/user-guide/settings/taxes): Taxes represent extra charges on top of the base price of a product. There are various forms of taxes that might be applicable, depending on local laws and the laws of the regions that your business serves. Common forms of applicable taxes are:","timestamp":1756058577882}