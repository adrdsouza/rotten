# ------------------------------------------------------------
# damneddesigns.com, www.damneddesigns.com - Migrated from Nginx Proxy Manager
# ------------------------------------------------------------

server {
    # Server variables
    set $forward_scheme http;
    set $server "5.78.142.235";
    set $port 4000;

    # Listen on HTTP and HTTPS
    listen 80;
    listen [::]:80;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # Server names
    server_name damneddesigns.com www.damneddesigns.com;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/damneddesigns.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/damneddesigns.com/privkey.pem;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # HSTS Security Header
    add_header Strict-Transport-Security $hsts_header always;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Force HTTPS redirect
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

    # Test static file
    location = /test.html {
        root /var/www/html;
        try_files $uri =404;
    }

    # Logging
    access_log /var/log/nginx/damneddesigns_access.log proxy;
    error_log /var/log/nginx/damneddesigns_error.log warn;

    # --- Global Compression & Performance Settings ---
    
    # Gzip Compression (fallback for older browsers)
    gzip on;
    gzip_proxied any;
    gzip_comp_level 5;
    gzip_vary on;
    gzip_types
        text/plain
        text/css
        application/javascript
        application/json
        application/xml
        image/svg+xml;

    # Brotli Compression (better compression for modern browsers)
    brotli on;
    brotli_comp_level 4;
    brotli_min_length 1000;
    brotli_static on;
    brotli_types
        text/plain
        text/css
        text/javascript
        application/javascript
        application/json
        application/xml
        application/xml+rss
        image/svg+xml
        font/woff
        font/woff2;

    # Proxy buffering for better performance
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    proxy_temp_file_write_size 256k;

    # Timeout settings
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # SSE endpoint removed - not used

    # Admin API (port 3000) - SECURED
    location /admin-api {
        # Block XSS and injection attempts
        if ($args ~ "(<|%3C).*script.*(>|%3E)") {
            return 403 "XSS attempt blocked";
        }
        if ($args ~ "(javascript:|data:|vbscript:)") {
            return 403 "Script injection blocked";
        }

        # Note: Using host IP because nginx runs in Docker container
        proxy_pass http://5.78.142.235:3000$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_http_version 1.1;

        # Enhanced Security headers
        add_header Strict-Transport-Security $hsts_header always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header X-Served-By $host;
        
        # Hide server info
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
    }

    # Shop API (port 3000) - SECURED
    location /shop-api {
        # Block XSS and injection attempts
        if ($args ~ "(<|%3C).*script.*(>|%3E)") {
            return 403 "XSS attempt blocked";
        }
        if ($args ~ "(javascript:|data:|vbscript:)") {
            return 403 "Script injection blocked";
        }

        # Note: Using host IP because nginx runs in Docker container
        proxy_pass http://5.78.142.235:3000$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_http_version 1.1;

        # Enhanced Security headers
        add_header Strict-Transport-Security $hsts_header always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header X-Served-By $host;
        
        # Hide server info
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
    }

    # Payments API (port 3000)
    location /payments {
        proxy_pass http://5.78.142.235:3000$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_http_version 1.1;

        # Security headers
        add_header Strict-Transport-Security $hsts_header always;
        add_header X-Served-By $host;
    }

    # Assets (port 3000) - Static assets with caching
    location /assets {
        # Allow cross-origin requests
        add_header Access-Control-Allow-Origin "*" always;
        add_header Cross-Origin-Resource-Policy "cross-origin" always;
        add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept" always;

        # Strong browser cache headers for assets
        add_header Cache-Control "public, max-age=31536000, immutable" always;
        add_header Vary "Accept-Encoding" always;
        expires 1y;

        # Proxy to backend assets
        proxy_pass http://5.78.142.235:3000/assets/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_http_version 1.1;

        # Security headers
        add_header Strict-Transport-Security $hsts_header always;
    }

    # Images (port 4000) - Frontend images
    location /images {
        proxy_pass http://5.78.142.235:4000$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_http_version 1.1;

        # Security headers
        add_header Strict-Transport-Security $hsts_header always;
    }

    # Fonts (port 4000) - Frontend fonts
    location /fonts/ {
        # Handle both /fonts/ and /products/X/fonts/
        location ~* ^/(.+/)?fonts/(.+)$ {
            proxy_pass http://5.78.142.235:4000/fonts/$2;
        }

        proxy_pass http://5.78.142.235:4000$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_http_version 1.1;

        # Security headers
        add_header Strict-Transport-Security $hsts_header always;
    }

    # Favicon handling - proxy to backend middleware
    location ~* ^/favicon\.(png|svg|ico)$ {
        proxy_pass http://5.78.142.235:3000$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_http_version 1.1;

        # Cache favicon files
        add_header Cache-Control "public, max-age=86400" always;
        add_header X-Cache-Status "FAVICON" always;

        # Security headers
        add_header Strict-Transport-Security $hsts_header always;
    }

    # Static files regex - Root-level static files with caching
    location ~* ^/[^/]+\.(avif|webp|png|jpg|jpeg|gif|css|js|woff|woff2)$ {
        # Cache root-level static files (homepage images and other static assets)
        add_header Cache-Control "public, max-age=31536000, immutable" always;
        add_header X-Cache-Status "ROOT-STATIC" always;
        expires 1y;

        # CORS for static assets
        add_header Access-Control-Allow-Origin "*" always;

        # Proxy to frontend
        proxy_pass http://5.78.142.235:4000$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_http_version 1.1;

        # Security headers
        add_header Strict-Transport-Security $hsts_header always;
    }

    # Admin Dashboard - React-based (port 5173) - SECURED
    location /admin {
        # Block XSS injection attempts
        if ($args ~ "(<|%3C).*script.*(>|%3E)") {
            return 403 "XSS attempt blocked";
        }
        if ($args ~ "(javascript:|data:|vbscript:)") {
            return 403 "Script injection blocked";
        }
        if ($request_uri ~ "(<|%3C).*script.*(>|%3E)") {
            return 403 "XSS attempt blocked";
        }

        # Note: Using host IP because nginx runs in Docker container
        # Cannot use 127.0.0.1 as that refers to the container, not the host
        proxy_pass http://5.78.142.235:5173;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_http_version 1.1;
        
        # Enhanced Security Headers for Admin Panel
        add_header Strict-Transport-Security $hsts_header always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' https:; frame-ancestors 'none';" always;
        add_header X-Served-By $host;

        # Hide server info
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
    }

 # SheerID Webhook Routes
    location /sheerid/ {
        proxy_pass http://5.78.142.235:3000/shop-api/sheerid/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # CORS Headers for SheerID
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,x-sheerid-signature' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,x-sheerid-signature';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    # Health check endpoint (port 3000)
    location /health {
        proxy_pass http://5.78.142.235:3000$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_http_version 1.1;

        # Security headers
        add_header Strict-Transport-Security $hsts_header always;
        add_header X-Served-By $host;
    }

    # Main application (port 4000 - frontend)
    location / {
        # Use NPM-style proxy configuration
        proxy_pass http://5.78.142.235:4000$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_http_version 1.1;

        # Security headers
        add_header Strict-Transport-Security $hsts_header always;
        add_header X-Served-By $host;
    }
}